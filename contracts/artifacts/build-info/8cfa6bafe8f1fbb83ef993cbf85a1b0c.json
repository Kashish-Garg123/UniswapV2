{
	"id": "8cfa6bafe8f1fbb83ef993cbf85a1b0c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/defi.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"./interfaces/IUniswapV2Router02.sol\";\n\ncontract Cheddar is Initializable {\n\naddress[] tokens;\nIUniswapV2Router02 router;\naddress wrappedMatic;\n\nfunction initialize(address[] memory _tokens, IUniswapV2Router02 _router, address _wrappedMatic) public {\n    tokens = _tokens;\n    router = _router;\n    wrappedMatic = _wrappedMatic;\n}\n\nfunction swapAndPay(address[] memory _tokens, uint[] memory bp) public payable {\n\n    uint totalTokens = _tokens.length;\n    require(msg.value>0,\"Invalid Matic!\");\n    for(uint i=0; i<totalTokens; i++){\n         address[] memory path = new address[](2);\n            path[0] = address(wrappedMatic);\n            path[1] = address(_tokens[i]);\n            uint ethToSend = msg.value*(bp[i])/10000;\n            address(router).call{value: (ethToSend)};\n            router.swapExactETHForTokens(ethToSend, path, msg.sender, block.timestamp+3600);\n }\n\n    // uint totalMatic = msg.value;\n    // for(uint i=0;i<totalTokens;i++) {\n    //   address[] memory path1 = new address[](2);\n    //         path1[0] = address(wrappedMatic);\n    //         path1[1] = address(_tokens[i]);\n    //    router.swapExactETHForTokens(0, path1, msg.sender, block.timestamp +3600);\n    // }\n\n\n}\n\n}"
			},
			"contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"./IUniswapV2Router01.sol\";\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() initializer {}\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\n        // contract may have been reentered.\n        require(_initializing ? _isConstructor() : !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} modifier, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    function _isConstructor() private view returns (bool) {\n        return !Address.isContract(address(this));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() initializer {} ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed: [.hljs-theme-light.nopadding] ```",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() initializer {} ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed: [.hljs-theme-light.nopadding] ```\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x4823752b07b8ea4ca971b217e39457930e7cb103c2c91e2a29729e5ca907e4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f319af26a9ade3e6cf3698bf1b84aa6213bdd7a76606ea9ba56ced163593934\",\"dweb:/ipfs/QmZ2u9zen5Htan4dSP1RZCY2XqB9HUwqkNCMzdn7aV2jWc\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 9,
								"contract": "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/defi.sol": {
				"Cheddar": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "_router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_wrappedMatic",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "bp",
									"type": "uint256[]"
								}
							],
							"name": "swapAndPay",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/defi.sol\":232:1396  contract Cheddar is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/defi.sol\":232:1396  contract Cheddar is Initializable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x90482d72\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x9728d85f\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/defi.sol\":337:522  function initialize(address[] memory _tokens, IUniswapV2Router02 _router, address _wrappedMatic) public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/defi.sol\":524:1393  function swapAndPay(address[] memory _tokens, uint[] memory bp) public payable {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/defi.sol\":337:522  function initialize(address[] memory _tokens, IUniswapV2Router02 _router, address _wrappedMatic) public {... */\n    tag_8:\n        /* \"contracts/defi.sol\":456:463  _tokens */\n      dup3\n        /* \"contracts/defi.sol\":447:453  tokens */\n      0x01\n        /* \"contracts/defi.sol\":447:463  tokens = _tokens */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      pop\n        /* \"contracts/defi.sol\":478:485  _router */\n      dup2\n        /* \"contracts/defi.sol\":469:475  router */\n      0x02\n      0x00\n        /* \"contracts/defi.sol\":469:485  router = _router */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/defi.sol\":506:519  _wrappedMatic */\n      dup1\n        /* \"contracts/defi.sol\":491:503  wrappedMatic */\n      0x03\n      0x00\n        /* \"contracts/defi.sol\":491:519  wrappedMatic = _wrappedMatic */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/defi.sol\":337:522  function initialize(address[] memory _tokens, IUniswapV2Router02 _router, address _wrappedMatic) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/defi.sol\":524:1393  function swapAndPay(address[] memory _tokens, uint[] memory bp) public payable {... */\n    tag_12:\n        /* \"contracts/defi.sol\":610:626  uint totalTokens */\n      0x00\n        /* \"contracts/defi.sol\":629:636  _tokens */\n      dup3\n        /* \"contracts/defi.sol\":629:643  _tokens.length */\n      mload\n        /* \"contracts/defi.sol\":610:643  uint totalTokens = _tokens.length */\n      swap1\n      pop\n        /* \"contracts/defi.sol\":667:668  0 */\n      0x00\n        /* \"contracts/defi.sol\":657:666  msg.value */\n      callvalue\n        /* \"contracts/defi.sol\":657:668  msg.value>0 */\n      gt\n        /* \"contracts/defi.sol\":649:686  require(msg.value>0,\"Invalid Matic!\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contracts/defi.sol\":696:702  uint i */\n      0x00\n        /* \"contracts/defi.sol\":692:1069  for(uint i=0; i<totalTokens; i++){... */\n    tag_20:\n        /* \"contracts/defi.sol\":708:719  totalTokens */\n      dup2\n        /* \"contracts/defi.sol\":706:707  i */\n      dup2\n        /* \"contracts/defi.sol\":706:719  i<totalTokens */\n      lt\n        /* \"contracts/defi.sol\":692:1069  for(uint i=0; i<totalTokens; i++){... */\n      iszero\n      tag_21\n      jumpi\n        /* \"contracts/defi.sol\":736:757  address[] memory path */\n      0x00\n        /* \"contracts/defi.sol\":774:775  2 */\n      0x02\n        /* \"contracts/defi.sol\":760:776  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n    tag_23:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_26\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_26:\n      pop\n        /* \"contracts/defi.sol\":736:776  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/defi.sol\":808:820  wrappedMatic */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/defi.sol\":790:794  path */\n      dup2\n        /* \"contracts/defi.sol\":795:796  0 */\n      0x00\n        /* \"contracts/defi.sol\":790:797  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_27\n      jumpi\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n    tag_27:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/defi.sol\":790:821  path[0] = address(wrappedMatic) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/defi.sol\":853:860  _tokens */\n      dup5\n        /* \"contracts/defi.sol\":861:862  i */\n      dup3\n        /* \"contracts/defi.sol\":853:863  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_30\n      jumpi\n      tag_31\n      tag_29\n      jump\t// in\n    tag_31:\n    tag_30:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/defi.sol\":835:839  path */\n      dup2\n        /* \"contracts/defi.sol\":840:841  1 */\n      0x01\n        /* \"contracts/defi.sol\":835:842  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_32\n      jumpi\n      tag_33\n      tag_29\n      jump\t// in\n    tag_33:\n    tag_32:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/defi.sol\":835:864  path[1] = address(_tokens[i]) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/defi.sol\":878:892  uint ethToSend */\n      0x00\n        /* \"contracts/defi.sol\":913:918  10000 */\n      0x2710\n        /* \"contracts/defi.sol\":906:908  bp */\n      dup6\n        /* \"contracts/defi.sol\":909:910  i */\n      dup5\n        /* \"contracts/defi.sol\":906:911  bp[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_34\n      jumpi\n      tag_35\n      tag_29\n      jump\t// in\n    tag_35:\n    tag_34:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/defi.sol\":895:904  msg.value */\n      callvalue\n        /* \"contracts/defi.sol\":895:912  msg.value*(bp[i]) */\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"contracts/defi.sol\":895:918  msg.value*(bp[i])/10000 */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/defi.sol\":878:918  uint ethToSend = msg.value*(bp[i])/10000 */\n      swap1\n      pop\n        /* \"contracts/defi.sol\":940:946  router */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      pop\n      pop\n        /* \"contracts/defi.sol\":986:992  router */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/defi.sol\":986:1014  router.swapExactETHForTokens */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7ff36ab5\n        /* \"contracts/defi.sol\":1015:1024  ethToSend */\n      dup3\n        /* \"contracts/defi.sol\":1026:1030  path */\n      dup5\n        /* \"contracts/defi.sol\":1032:1042  msg.sender */\n      caller\n        /* \"contracts/defi.sol\":1060:1064  3600 */\n      0x0e10\n        /* \"contracts/defi.sol\":1044:1059  block.timestamp */\n      timestamp\n        /* \"contracts/defi.sol\":1044:1064  block.timestamp+3600 */\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"contracts/defi.sol\":986:1065  router.swapExactETHForTokens(ethToSend, path, msg.sender, block.timestamp+3600) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      pop\n        /* \"contracts/defi.sol\":725:1069  {... */\n      pop\n      pop\n        /* \"contracts/defi.sol\":721:724  i++ */\n      dup1\n      dup1\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      swap2\n      pop\n      pop\n        /* \"contracts/defi.sol\":692:1069  for(uint i=0; i<totalTokens; i++){... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"contracts/defi.sol\":603:1393  {... */\n      pop\n        /* \"contracts/defi.sol\":524:1393  function swapAndPay(address[] memory _tokens, uint[] memory bp) public payable {... */\n      pop\n      pop\n      jump\t// out\n    tag_15:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_51\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_52:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_53\n      jumpi\n      dup3\n      mload\n      dup3\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_52)\n    tag_53:\n    tag_51:\n      pop\n      swap1\n      pop\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      pop\n      swap1\n      jump\t// out\n    tag_55:\n    tag_56:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_56)\n    tag_57:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_59:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_61\n        /* \"#utility.yul\":161:225   */\n      tag_62\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":145:226   */\n      tag_64\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":350:493   */\n    tag_65:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_68:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_71\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_68)\n    tag_70:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_73:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_75\n        /* \"#utility.yul\":906:970   */\n      tag_76\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":890:971   */\n      tag_64\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_79\n      tag_67\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1095:1238   */\n    tag_78:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_80:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_83\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_80)\n    tag_82:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1514:2258   */\n    tag_85:\n        /* \"#utility.yul\":1621:1626   */\n      0x00\n        /* \"#utility.yul\":1646:1727   */\n      tag_87\n        /* \"#utility.yul\":1662:1726   */\n      tag_88\n        /* \"#utility.yul\":1719:1725   */\n      dup5\n        /* \"#utility.yul\":1662:1726   */\n      tag_77\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1646:1727   */\n      tag_64\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1637:1727   */\n      swap1\n      pop\n        /* \"#utility.yul\":1747:1752   */\n      dup1\n        /* \"#utility.yul\":1776:1782   */\n      dup4\n        /* \"#utility.yul\":1769:1774   */\n      dup3\n        /* \"#utility.yul\":1762:1783   */\n      mstore\n        /* \"#utility.yul\":1810:1814   */\n      0x20\n        /* \"#utility.yul\":1803:1808   */\n      dup3\n        /* \"#utility.yul\":1799:1815   */\n      add\n        /* \"#utility.yul\":1792:1815   */\n      swap1\n      pop\n        /* \"#utility.yul\":1836:1842   */\n      dup3\n        /* \"#utility.yul\":1886:1889   */\n      dup6\n        /* \"#utility.yul\":1878:1882   */\n      0x20\n        /* \"#utility.yul\":1870:1876   */\n      dup7\n        /* \"#utility.yul\":1866:1883   */\n      mul\n        /* \"#utility.yul\":1861:1864   */\n      dup3\n        /* \"#utility.yul\":1857:1884   */\n      add\n        /* \"#utility.yul\":1854:1890   */\n      gt\n        /* \"#utility.yul\":1851:1994   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":1905:1984   */\n      tag_90\n      tag_67\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1851:1994   */\n    tag_89:\n        /* \"#utility.yul\":2018:2019   */\n      0x00\n        /* \"#utility.yul\":2003:2252   */\n    tag_91:\n        /* \"#utility.yul\":2028:2034   */\n      dup6\n        /* \"#utility.yul\":2025:2026   */\n      dup2\n        /* \"#utility.yul\":2022:2035   */\n      lt\n        /* \"#utility.yul\":2003:2252   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":2096:2099   */\n      dup2\n        /* \"#utility.yul\":2125:2173   */\n      tag_94\n        /* \"#utility.yul\":2169:2172   */\n      dup9\n        /* \"#utility.yul\":2157:2167   */\n      dup3\n        /* \"#utility.yul\":2125:2173   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2120:2123   */\n      dup5\n        /* \"#utility.yul\":2113:2174   */\n      mstore\n        /* \"#utility.yul\":2203:2207   */\n      0x20\n        /* \"#utility.yul\":2198:2201   */\n      dup5\n        /* \"#utility.yul\":2194:2208   */\n      add\n        /* \"#utility.yul\":2187:2208   */\n      swap4\n      pop\n        /* \"#utility.yul\":2237:2241   */\n      0x20\n        /* \"#utility.yul\":2232:2235   */\n      dup4\n        /* \"#utility.yul\":2228:2242   */\n      add\n        /* \"#utility.yul\":2221:2242   */\n      swap3\n      pop\n        /* \"#utility.yul\":2063:2252   */\n      pop\n        /* \"#utility.yul\":2050:2051   */\n      0x01\n        /* \"#utility.yul\":2047:2048   */\n      dup2\n        /* \"#utility.yul\":2043:2052   */\n      add\n        /* \"#utility.yul\":2038:2052   */\n      swap1\n      pop\n        /* \"#utility.yul\":2003:2252   */\n      jump(tag_91)\n    tag_93:\n        /* \"#utility.yul\":2007:2021   */\n      pop\n        /* \"#utility.yul\":1627:2258   */\n      pop\n      pop\n        /* \"#utility.yul\":1514:2258   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2264:2403   */\n    tag_72:\n        /* \"#utility.yul\":2310:2315   */\n      0x00\n        /* \"#utility.yul\":2348:2354   */\n      dup2\n        /* \"#utility.yul\":2335:2355   */\n      calldataload\n        /* \"#utility.yul\":2326:2355   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2397   */\n      tag_97\n        /* \"#utility.yul\":2391:2396   */\n      dup2\n        /* \"#utility.yul\":2364:2397   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2264:2403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2426:2796   */\n    tag_99:\n        /* \"#utility.yul\":2497:2502   */\n      0x00\n        /* \"#utility.yul\":2546:2549   */\n      dup3\n        /* \"#utility.yul\":2539:2543   */\n      0x1f\n        /* \"#utility.yul\":2531:2537   */\n      dup4\n        /* \"#utility.yul\":2527:2544   */\n      add\n        /* \"#utility.yul\":2523:2550   */\n      slt\n        /* \"#utility.yul\":2513:2635   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":2554:2633   */\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2513:2635   */\n    tag_101:\n        /* \"#utility.yul\":2671:2677   */\n      dup2\n        /* \"#utility.yul\":2658:2678   */\n      calldataload\n        /* \"#utility.yul\":2696:2790   */\n      tag_104\n        /* \"#utility.yul\":2786:2789   */\n      dup5\n        /* \"#utility.yul\":2778:2784   */\n      dup3\n        /* \"#utility.yul\":2771:2775   */\n      0x20\n        /* \"#utility.yul\":2763:2769   */\n      dup7\n        /* \"#utility.yul\":2759:2776   */\n      add\n        /* \"#utility.yul\":2696:2790   */\n      tag_59\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2687:2790   */\n      swap2\n      pop\n        /* \"#utility.yul\":2503:2796   */\n      pop\n        /* \"#utility.yul\":2426:2796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2819:3189   */\n    tag_105:\n        /* \"#utility.yul\":2890:2895   */\n      0x00\n        /* \"#utility.yul\":2939:2942   */\n      dup3\n        /* \"#utility.yul\":2932:2936   */\n      0x1f\n        /* \"#utility.yul\":2924:2930   */\n      dup4\n        /* \"#utility.yul\":2920:2937   */\n      add\n        /* \"#utility.yul\":2916:2943   */\n      slt\n        /* \"#utility.yul\":2906:3028   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2947:3026   */\n      tag_108\n      tag_103\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2906:3028   */\n    tag_107:\n        /* \"#utility.yul\":3064:3070   */\n      dup2\n        /* \"#utility.yul\":3051:3071   */\n      calldataload\n        /* \"#utility.yul\":3089:3183   */\n      tag_109\n        /* \"#utility.yul\":3179:3182   */\n      dup5\n        /* \"#utility.yul\":3171:3177   */\n      dup3\n        /* \"#utility.yul\":3164:3168   */\n      0x20\n        /* \"#utility.yul\":3156:3162   */\n      dup7\n        /* \"#utility.yul\":3152:3169   */\n      add\n        /* \"#utility.yul\":3089:3183   */\n      tag_73\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3080:3183   */\n      swap2\n      pop\n        /* \"#utility.yul\":2896:3189   */\n      pop\n        /* \"#utility.yul\":2819:3189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3212:3597   */\n    tag_110:\n        /* \"#utility.yul\":3294:3299   */\n      0x00\n        /* \"#utility.yul\":3343:3346   */\n      dup3\n        /* \"#utility.yul\":3336:3340   */\n      0x1f\n        /* \"#utility.yul\":3328:3334   */\n      dup4\n        /* \"#utility.yul\":3324:3341   */\n      add\n        /* \"#utility.yul\":3320:3347   */\n      slt\n        /* \"#utility.yul\":3310:3432   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":3351:3430   */\n      tag_113\n      tag_103\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3310:3432   */\n    tag_112:\n        /* \"#utility.yul\":3461:3467   */\n      dup2\n        /* \"#utility.yul\":3455:3468   */\n      mload\n        /* \"#utility.yul\":3486:3591   */\n      tag_114\n        /* \"#utility.yul\":3587:3590   */\n      dup5\n        /* \"#utility.yul\":3579:3585   */\n      dup3\n        /* \"#utility.yul\":3572:3576   */\n      0x20\n        /* \"#utility.yul\":3564:3570   */\n      dup7\n        /* \"#utility.yul\":3560:3577   */\n      add\n        /* \"#utility.yul\":3486:3591   */\n      tag_85\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3477:3591   */\n      swap2\n      pop\n        /* \"#utility.yul\":3300:3597   */\n      pop\n        /* \"#utility.yul\":3212:3597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3603:3794   */\n    tag_115:\n        /* \"#utility.yul\":3675:3680   */\n      0x00\n        /* \"#utility.yul\":3713:3719   */\n      dup2\n        /* \"#utility.yul\":3700:3720   */\n      calldataload\n        /* \"#utility.yul\":3691:3720   */\n      swap1\n      pop\n        /* \"#utility.yul\":3729:3788   */\n      tag_117\n        /* \"#utility.yul\":3782:3787   */\n      dup2\n        /* \"#utility.yul\":3729:3788   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3603:3794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:3939   */\n    tag_84:\n        /* \"#utility.yul\":3846:3851   */\n      0x00\n        /* \"#utility.yul\":3884:3890   */\n      dup2\n        /* \"#utility.yul\":3871:3891   */\n      calldataload\n        /* \"#utility.yul\":3862:3891   */\n      swap1\n      pop\n        /* \"#utility.yul\":3900:3933   */\n      tag_120\n        /* \"#utility.yul\":3927:3932   */\n      dup2\n        /* \"#utility.yul\":3900:3933   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3800:3939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3945:4088   */\n    tag_95:\n        /* \"#utility.yul\":4002:4007   */\n      0x00\n        /* \"#utility.yul\":4033:4039   */\n      dup2\n        /* \"#utility.yul\":4027:4040   */\n      mload\n        /* \"#utility.yul\":4018:4040   */\n      swap1\n      pop\n        /* \"#utility.yul\":4049:4082   */\n      tag_123\n        /* \"#utility.yul\":4076:4081   */\n      dup2\n        /* \"#utility.yul\":4049:4082   */\n      tag_121\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3945:4088   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4094:4988   */\n    tag_11:\n        /* \"#utility.yul\":4212:4218   */\n      0x00\n        /* \"#utility.yul\":4220:4226   */\n      dup1\n        /* \"#utility.yul\":4269:4271   */\n      0x40\n        /* \"#utility.yul\":4257:4266   */\n      dup4\n        /* \"#utility.yul\":4248:4255   */\n      dup6\n        /* \"#utility.yul\":4244:4267   */\n      sub\n        /* \"#utility.yul\":4240:4272   */\n      slt\n        /* \"#utility.yul\":4237:4356   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":4275:4354   */\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4237:4356   */\n    tag_125:\n        /* \"#utility.yul\":4423:4424   */\n      0x00\n        /* \"#utility.yul\":4412:4421   */\n      dup4\n        /* \"#utility.yul\":4408:4425   */\n      add\n        /* \"#utility.yul\":4395:4426   */\n      calldataload\n        /* \"#utility.yul\":4453:4471   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4445:4451   */\n      dup2\n        /* \"#utility.yul\":4442:4472   */\n      gt\n        /* \"#utility.yul\":4439:4556   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":4475:4554   */\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4439:4556   */\n    tag_128:\n        /* \"#utility.yul\":4580:4658   */\n      tag_131\n        /* \"#utility.yul\":4650:4657   */\n      dup6\n        /* \"#utility.yul\":4641:4647   */\n      dup3\n        /* \"#utility.yul\":4630:4639   */\n      dup7\n        /* \"#utility.yul\":4626:4648   */\n      add\n        /* \"#utility.yul\":4580:4658   */\n      tag_99\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4570:4658   */\n      swap3\n      pop\n        /* \"#utility.yul\":4366:4668   */\n      pop\n        /* \"#utility.yul\":4735:4737   */\n      0x20\n        /* \"#utility.yul\":4724:4733   */\n      dup4\n        /* \"#utility.yul\":4720:4738   */\n      add\n        /* \"#utility.yul\":4707:4739   */\n      calldataload\n        /* \"#utility.yul\":4766:4784   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4758:4764   */\n      dup2\n        /* \"#utility.yul\":4755:4785   */\n      gt\n        /* \"#utility.yul\":4752:4869   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":4788:4867   */\n      tag_133\n      tag_130\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4752:4869   */\n    tag_132:\n        /* \"#utility.yul\":4893:4971   */\n      tag_134\n        /* \"#utility.yul\":4963:4970   */\n      dup6\n        /* \"#utility.yul\":4954:4960   */\n      dup3\n        /* \"#utility.yul\":4943:4952   */\n      dup7\n        /* \"#utility.yul\":4939:4961   */\n      add\n        /* \"#utility.yul\":4893:4971   */\n      tag_105\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4883:4971   */\n      swap2\n      pop\n        /* \"#utility.yul\":4678:4981   */\n      pop\n        /* \"#utility.yul\":4094:4988   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4994:5875   */\n    tag_7:\n        /* \"#utility.yul\":5122:5128   */\n      0x00\n        /* \"#utility.yul\":5130:5136   */\n      dup1\n        /* \"#utility.yul\":5138:5144   */\n      0x00\n        /* \"#utility.yul\":5187:5189   */\n      0x60\n        /* \"#utility.yul\":5175:5184   */\n      dup5\n        /* \"#utility.yul\":5166:5173   */\n      dup7\n        /* \"#utility.yul\":5162:5185   */\n      sub\n        /* \"#utility.yul\":5158:5190   */\n      slt\n        /* \"#utility.yul\":5155:5274   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":5193:5272   */\n      tag_137\n      tag_127\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5155:5274   */\n    tag_136:\n        /* \"#utility.yul\":5341:5342   */\n      0x00\n        /* \"#utility.yul\":5330:5339   */\n      dup5\n        /* \"#utility.yul\":5326:5343   */\n      add\n        /* \"#utility.yul\":5313:5344   */\n      calldataload\n        /* \"#utility.yul\":5371:5389   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5363:5369   */\n      dup2\n        /* \"#utility.yul\":5360:5390   */\n      gt\n        /* \"#utility.yul\":5357:5474   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":5393:5472   */\n      tag_139\n      tag_130\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5357:5474   */\n    tag_138:\n        /* \"#utility.yul\":5498:5576   */\n      tag_140\n        /* \"#utility.yul\":5568:5575   */\n      dup7\n        /* \"#utility.yul\":5559:5565   */\n      dup3\n        /* \"#utility.yul\":5548:5557   */\n      dup8\n        /* \"#utility.yul\":5544:5566   */\n      add\n        /* \"#utility.yul\":5498:5576   */\n      tag_99\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5488:5576   */\n      swap4\n      pop\n        /* \"#utility.yul\":5284:5586   */\n      pop\n        /* \"#utility.yul\":5625:5627   */\n      0x20\n        /* \"#utility.yul\":5651:5730   */\n      tag_141\n        /* \"#utility.yul\":5722:5729   */\n      dup7\n        /* \"#utility.yul\":5713:5719   */\n      dup3\n        /* \"#utility.yul\":5702:5711   */\n      dup8\n        /* \"#utility.yul\":5698:5720   */\n      add\n        /* \"#utility.yul\":5651:5730   */\n      tag_115\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5641:5730   */\n      swap3\n      pop\n        /* \"#utility.yul\":5596:5740   */\n      pop\n        /* \"#utility.yul\":5779:5781   */\n      0x40\n        /* \"#utility.yul\":5805:5858   */\n      tag_142\n        /* \"#utility.yul\":5850:5857   */\n      dup7\n        /* \"#utility.yul\":5841:5847   */\n      dup3\n        /* \"#utility.yul\":5830:5839   */\n      dup8\n        /* \"#utility.yul\":5826:5848   */\n      add\n        /* \"#utility.yul\":5805:5858   */\n      tag_72\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5795:5858   */\n      swap2\n      pop\n        /* \"#utility.yul\":5750:5868   */\n      pop\n        /* \"#utility.yul\":4994:5875   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5881:6435   */\n    tag_48:\n        /* \"#utility.yul\":5976:5982   */\n      0x00\n        /* \"#utility.yul\":6025:6027   */\n      0x20\n        /* \"#utility.yul\":6013:6022   */\n      dup3\n        /* \"#utility.yul\":6004:6011   */\n      dup5\n        /* \"#utility.yul\":6000:6023   */\n      sub\n        /* \"#utility.yul\":5996:6028   */\n      slt\n        /* \"#utility.yul\":5993:6112   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":6031:6110   */\n      tag_145\n      tag_127\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5993:6112   */\n    tag_144:\n        /* \"#utility.yul\":6172:6173   */\n      0x00\n        /* \"#utility.yul\":6161:6170   */\n      dup3\n        /* \"#utility.yul\":6157:6174   */\n      add\n        /* \"#utility.yul\":6151:6175   */\n      mload\n        /* \"#utility.yul\":6202:6220   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6194:6200   */\n      dup2\n        /* \"#utility.yul\":6191:6221   */\n      gt\n        /* \"#utility.yul\":6188:6305   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":6224:6303   */\n      tag_147\n      tag_130\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6188:6305   */\n    tag_146:\n        /* \"#utility.yul\":6329:6418   */\n      tag_148\n        /* \"#utility.yul\":6410:6417   */\n      dup5\n        /* \"#utility.yul\":6401:6407   */\n      dup3\n        /* \"#utility.yul\":6390:6399   */\n      dup6\n        /* \"#utility.yul\":6386:6408   */\n      add\n        /* \"#utility.yul\":6329:6418   */\n      tag_110\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":6319:6418   */\n      swap2\n      pop\n        /* \"#utility.yul\":6122:6428   */\n      pop\n        /* \"#utility.yul\":5881:6435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6441:6620   */\n    tag_149:\n        /* \"#utility.yul\":6510:6520   */\n      0x00\n        /* \"#utility.yul\":6531:6577   */\n      tag_151\n        /* \"#utility.yul\":6573:6576   */\n      dup4\n        /* \"#utility.yul\":6565:6571   */\n      dup4\n        /* \"#utility.yul\":6531:6577   */\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6609:6613   */\n      0x20\n        /* \"#utility.yul\":6604:6607   */\n      dup4\n        /* \"#utility.yul\":6600:6614   */\n      add\n        /* \"#utility.yul\":6586:6614   */\n      swap1\n      pop\n        /* \"#utility.yul\":6441:6620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6626:6734   */\n    tag_152:\n        /* \"#utility.yul\":6703:6727   */\n      tag_154\n        /* \"#utility.yul\":6721:6726   */\n      dup2\n        /* \"#utility.yul\":6703:6727   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6698:6701   */\n      dup3\n        /* \"#utility.yul\":6691:6728   */\n      mstore\n        /* \"#utility.yul\":6626:6734   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6740:6858   */\n    tag_156:\n        /* \"#utility.yul\":6827:6851   */\n      tag_158\n        /* \"#utility.yul\":6845:6850   */\n      dup2\n        /* \"#utility.yul\":6827:6851   */\n      tag_155\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":6822:6825   */\n      dup3\n        /* \"#utility.yul\":6815:6852   */\n      mstore\n        /* \"#utility.yul\":6740:6858   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6894:7626   */\n    tag_159:\n        /* \"#utility.yul\":7013:7016   */\n      0x00\n        /* \"#utility.yul\":7042:7096   */\n      tag_161\n        /* \"#utility.yul\":7090:7095   */\n      dup3\n        /* \"#utility.yul\":7042:7096   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7112:7198   */\n      tag_163\n        /* \"#utility.yul\":7191:7197   */\n      dup2\n        /* \"#utility.yul\":7186:7189   */\n      dup6\n        /* \"#utility.yul\":7112:7198   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":7105:7198   */\n      swap4\n      pop\n        /* \"#utility.yul\":7222:7278   */\n      tag_165\n        /* \"#utility.yul\":7272:7277   */\n      dup4\n        /* \"#utility.yul\":7222:7278   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":7301:7308   */\n      dup1\n        /* \"#utility.yul\":7332:7333   */\n      0x00\n        /* \"#utility.yul\":7317:7601   */\n    tag_167:\n        /* \"#utility.yul\":7342:7348   */\n      dup4\n        /* \"#utility.yul\":7339:7340   */\n      dup2\n        /* \"#utility.yul\":7336:7349   */\n      lt\n        /* \"#utility.yul\":7317:7601   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":7418:7424   */\n      dup2\n        /* \"#utility.yul\":7412:7425   */\n      mload\n        /* \"#utility.yul\":7445:7508   */\n      tag_170\n        /* \"#utility.yul\":7504:7507   */\n      dup9\n        /* \"#utility.yul\":7489:7502   */\n      dup3\n        /* \"#utility.yul\":7445:7508   */\n      tag_149\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":7438:7508   */\n      swap8\n      pop\n        /* \"#utility.yul\":7531:7591   */\n      tag_171\n        /* \"#utility.yul\":7584:7590   */\n      dup4\n        /* \"#utility.yul\":7531:7591   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":7521:7591   */\n      swap3\n      pop\n        /* \"#utility.yul\":7377:7601   */\n      pop\n        /* \"#utility.yul\":7364:7365   */\n      0x01\n        /* \"#utility.yul\":7361:7362   */\n      dup2\n        /* \"#utility.yul\":7357:7366   */\n      add\n        /* \"#utility.yul\":7352:7366   */\n      swap1\n      pop\n        /* \"#utility.yul\":7317:7601   */\n      jump(tag_167)\n    tag_169:\n        /* \"#utility.yul\":7321:7335   */\n      pop\n        /* \"#utility.yul\":7617:7620   */\n      dup6\n        /* \"#utility.yul\":7610:7620   */\n      swap4\n      pop\n        /* \"#utility.yul\":7018:7626   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6894:7626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7632:7998   */\n    tag_173:\n        /* \"#utility.yul\":7774:7777   */\n      0x00\n        /* \"#utility.yul\":7795:7862   */\n      tag_175\n        /* \"#utility.yul\":7859:7861   */\n      0x0e\n        /* \"#utility.yul\":7854:7857   */\n      dup4\n        /* \"#utility.yul\":7795:7862   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":7788:7862   */\n      swap2\n      pop\n        /* \"#utility.yul\":7871:7964   */\n      tag_177\n        /* \"#utility.yul\":7960:7963   */\n      dup3\n        /* \"#utility.yul\":7871:7964   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7989:7991   */\n      0x20\n        /* \"#utility.yul\":7984:7987   */\n      dup3\n        /* \"#utility.yul\":7980:7992   */\n      add\n        /* \"#utility.yul\":7973:7992   */\n      swap1\n      pop\n        /* \"#utility.yul\":7632:7998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8004:8122   */\n    tag_179:\n        /* \"#utility.yul\":8091:8115   */\n      tag_181\n        /* \"#utility.yul\":8109:8114   */\n      dup2\n        /* \"#utility.yul\":8091:8115   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":8086:8089   */\n      dup3\n        /* \"#utility.yul\":8079:8116   */\n      mstore\n        /* \"#utility.yul\":8004:8122   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8128:8547   */\n    tag_19:\n        /* \"#utility.yul\":8294:8298   */\n      0x00\n        /* \"#utility.yul\":8332:8334   */\n      0x20\n        /* \"#utility.yul\":8321:8330   */\n      dup3\n        /* \"#utility.yul\":8317:8335   */\n      add\n        /* \"#utility.yul\":8309:8335   */\n      swap1\n      pop\n        /* \"#utility.yul\":8381:8390   */\n      dup2\n        /* \"#utility.yul\":8375:8379   */\n      dup2\n        /* \"#utility.yul\":8371:8391   */\n      sub\n        /* \"#utility.yul\":8367:8368   */\n      0x00\n        /* \"#utility.yul\":8356:8365   */\n      dup4\n        /* \"#utility.yul\":8352:8369   */\n      add\n        /* \"#utility.yul\":8345:8392   */\n      mstore\n        /* \"#utility.yul\":8409:8540   */\n      tag_184\n        /* \"#utility.yul\":8535:8539   */\n      dup2\n        /* \"#utility.yul\":8409:8540   */\n      tag_173\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":8401:8540   */\n      swap1\n      pop\n        /* \"#utility.yul\":8128:8547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8553:9257   */\n    tag_43:\n        /* \"#utility.yul\":8780:8784   */\n      0x00\n        /* \"#utility.yul\":8818:8821   */\n      0x80\n        /* \"#utility.yul\":8807:8816   */\n      dup3\n        /* \"#utility.yul\":8803:8822   */\n      add\n        /* \"#utility.yul\":8795:8822   */\n      swap1\n      pop\n        /* \"#utility.yul\":8832:8903   */\n      tag_186\n        /* \"#utility.yul\":8900:8901   */\n      0x00\n        /* \"#utility.yul\":8889:8898   */\n      dup4\n        /* \"#utility.yul\":8885:8902   */\n      add\n        /* \"#utility.yul\":8876:8882   */\n      dup8\n        /* \"#utility.yul\":8832:8903   */\n      tag_179\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8950:8959   */\n      dup2\n        /* \"#utility.yul\":8944:8948   */\n      dup2\n        /* \"#utility.yul\":8940:8960   */\n      sub\n        /* \"#utility.yul\":8935:8937   */\n      0x20\n        /* \"#utility.yul\":8924:8933   */\n      dup4\n        /* \"#utility.yul\":8920:8938   */\n      add\n        /* \"#utility.yul\":8913:8961   */\n      mstore\n        /* \"#utility.yul\":8978:9086   */\n      tag_187\n        /* \"#utility.yul\":9081:9085   */\n      dup2\n        /* \"#utility.yul\":9072:9078   */\n      dup7\n        /* \"#utility.yul\":8978:9086   */\n      tag_159\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":8970:9086   */\n      swap1\n      pop\n        /* \"#utility.yul\":9096:9168   */\n      tag_188\n        /* \"#utility.yul\":9164:9166   */\n      0x40\n        /* \"#utility.yul\":9153:9162   */\n      dup4\n        /* \"#utility.yul\":9149:9167   */\n      add\n        /* \"#utility.yul\":9140:9146   */\n      dup6\n        /* \"#utility.yul\":9096:9168   */\n      tag_156\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":9178:9250   */\n      tag_189\n        /* \"#utility.yul\":9246:9248   */\n      0x60\n        /* \"#utility.yul\":9235:9244   */\n      dup4\n        /* \"#utility.yul\":9231:9249   */\n      add\n        /* \"#utility.yul\":9222:9228   */\n      dup5\n        /* \"#utility.yul\":9178:9250   */\n      tag_179\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":8553:9257   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9263:9392   */\n    tag_64:\n        /* \"#utility.yul\":9297:9303   */\n      0x00\n        /* \"#utility.yul\":9324:9344   */\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":9314:9344   */\n      swap1\n      pop\n        /* \"#utility.yul\":9353:9386   */\n      tag_193\n        /* \"#utility.yul\":9381:9385   */\n      dup3\n        /* \"#utility.yul\":9373:9379   */\n      dup3\n        /* \"#utility.yul\":9353:9386   */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":9263:9392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9398:9473   */\n    tag_192:\n        /* \"#utility.yul\":9431:9437   */\n      0x00\n        /* \"#utility.yul\":9464:9466   */\n      0x40\n        /* \"#utility.yul\":9458:9467   */\n      mload\n        /* \"#utility.yul\":9448:9467   */\n      swap1\n      pop\n        /* \"#utility.yul\":9398:9473   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9479:9790   */\n    tag_63:\n        /* \"#utility.yul\":9556:9560   */\n      0x00\n        /* \"#utility.yul\":9646:9664   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9638:9644   */\n      dup3\n        /* \"#utility.yul\":9635:9665   */\n      gt\n        /* \"#utility.yul\":9632:9688   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":9668:9686   */\n      tag_198\n      tag_25\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":9632:9688   */\n    tag_197:\n        /* \"#utility.yul\":9718:9722   */\n      0x20\n        /* \"#utility.yul\":9710:9716   */\n      dup3\n        /* \"#utility.yul\":9706:9723   */\n      mul\n        /* \"#utility.yul\":9698:9723   */\n      swap1\n      pop\n        /* \"#utility.yul\":9778:9782   */\n      0x20\n        /* \"#utility.yul\":9772:9776   */\n      dup2\n        /* \"#utility.yul\":9768:9783   */\n      add\n        /* \"#utility.yul\":9760:9783   */\n      swap1\n      pop\n        /* \"#utility.yul\":9479:9790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9796:10107   */\n    tag_77:\n        /* \"#utility.yul\":9873:9877   */\n      0x00\n        /* \"#utility.yul\":9963:9981   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9955:9961   */\n      dup3\n        /* \"#utility.yul\":9952:9982   */\n      gt\n        /* \"#utility.yul\":9949:10005   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":9985:10003   */\n      tag_201\n      tag_25\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":9949:10005   */\n    tag_200:\n        /* \"#utility.yul\":10035:10039   */\n      0x20\n        /* \"#utility.yul\":10027:10033   */\n      dup3\n        /* \"#utility.yul\":10023:10040   */\n      mul\n        /* \"#utility.yul\":10015:10040   */\n      swap1\n      pop\n        /* \"#utility.yul\":10095:10099   */\n      0x20\n        /* \"#utility.yul\":10089:10093   */\n      dup2\n        /* \"#utility.yul\":10085:10100   */\n      add\n        /* \"#utility.yul\":10077:10100   */\n      swap1\n      pop\n        /* \"#utility.yul\":9796:10107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10113:10245   */\n    tag_166:\n        /* \"#utility.yul\":10180:10184   */\n      0x00\n        /* \"#utility.yul\":10203:10206   */\n      dup2\n        /* \"#utility.yul\":10195:10206   */\n      swap1\n      pop\n        /* \"#utility.yul\":10233:10237   */\n      0x20\n        /* \"#utility.yul\":10228:10231   */\n      dup3\n        /* \"#utility.yul\":10224:10238   */\n      add\n        /* \"#utility.yul\":10216:10238   */\n      swap1\n      pop\n        /* \"#utility.yul\":10113:10245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10251:10365   */\n    tag_162:\n        /* \"#utility.yul\":10318:10324   */\n      0x00\n        /* \"#utility.yul\":10352:10357   */\n      dup2\n        /* \"#utility.yul\":10346:10358   */\n      mload\n        /* \"#utility.yul\":10336:10358   */\n      swap1\n      pop\n        /* \"#utility.yul\":10251:10365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10371:10484   */\n    tag_172:\n        /* \"#utility.yul\":10441:10445   */\n      0x00\n        /* \"#utility.yul\":10473:10477   */\n      0x20\n        /* \"#utility.yul\":10468:10471   */\n      dup3\n        /* \"#utility.yul\":10464:10478   */\n      add\n        /* \"#utility.yul\":10456:10478   */\n      swap1\n      pop\n        /* \"#utility.yul\":10371:10484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10490:10674   */\n    tag_164:\n        /* \"#utility.yul\":10589:10600   */\n      0x00\n        /* \"#utility.yul\":10623:10629   */\n      dup3\n        /* \"#utility.yul\":10618:10621   */\n      dup3\n        /* \"#utility.yul\":10611:10630   */\n      mstore\n        /* \"#utility.yul\":10663:10667   */\n      0x20\n        /* \"#utility.yul\":10658:10661   */\n      dup3\n        /* \"#utility.yul\":10654:10668   */\n      add\n        /* \"#utility.yul\":10639:10668   */\n      swap1\n      pop\n        /* \"#utility.yul\":10490:10674   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10680:10849   */\n    tag_176:\n        /* \"#utility.yul\":10764:10775   */\n      0x00\n        /* \"#utility.yul\":10798:10804   */\n      dup3\n        /* \"#utility.yul\":10793:10796   */\n      dup3\n        /* \"#utility.yul\":10786:10805   */\n      mstore\n        /* \"#utility.yul\":10838:10842   */\n      0x20\n        /* \"#utility.yul\":10833:10836   */\n      dup3\n        /* \"#utility.yul\":10829:10843   */\n      add\n        /* \"#utility.yul\":10814:10843   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10855:11160   */\n    tag_41:\n        /* \"#utility.yul\":10895:10898   */\n      0x00\n        /* \"#utility.yul\":10914:10934   */\n      tag_208\n        /* \"#utility.yul\":10932:10933   */\n      dup3\n        /* \"#utility.yul\":10914:10934   */\n      tag_182\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":10909:10934   */\n      swap2\n      pop\n        /* \"#utility.yul\":10948:10968   */\n      tag_209\n        /* \"#utility.yul\":10966:10967   */\n      dup4\n        /* \"#utility.yul\":10948:10968   */\n      tag_182\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":10943:10968   */\n      swap3\n      pop\n        /* \"#utility.yul\":11102:11103   */\n      dup3\n        /* \"#utility.yul\":11034:11100   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11030:11104   */\n      sub\n        /* \"#utility.yul\":11027:11028   */\n      dup3\n        /* \"#utility.yul\":11024:11105   */\n      gt\n        /* \"#utility.yul\":11021:11128   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":11108:11126   */\n      tag_211\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":11021:11128   */\n    tag_210:\n        /* \"#utility.yul\":11152:11153   */\n      dup3\n        /* \"#utility.yul\":11149:11150   */\n      dup3\n        /* \"#utility.yul\":11145:11154   */\n      add\n        /* \"#utility.yul\":11138:11154   */\n      swap1\n      pop\n        /* \"#utility.yul\":10855:11160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11166:11351   */\n    tag_39:\n        /* \"#utility.yul\":11206:11207   */\n      0x00\n        /* \"#utility.yul\":11223:11243   */\n      tag_214\n        /* \"#utility.yul\":11241:11242   */\n      dup3\n        /* \"#utility.yul\":11223:11243   */\n      tag_182\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":11218:11243   */\n      swap2\n      pop\n        /* \"#utility.yul\":11257:11277   */\n      tag_215\n        /* \"#utility.yul\":11275:11276   */\n      dup4\n        /* \"#utility.yul\":11257:11277   */\n      tag_182\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":11252:11277   */\n      swap3\n      pop\n        /* \"#utility.yul\":11296:11297   */\n      dup3\n        /* \"#utility.yul\":11286:11321   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":11301:11319   */\n      tag_217\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":11286:11321   */\n    tag_216:\n        /* \"#utility.yul\":11343:11344   */\n      dup3\n        /* \"#utility.yul\":11340:11341   */\n      dup3\n        /* \"#utility.yul\":11336:11345   */\n      div\n        /* \"#utility.yul\":11331:11345   */\n      swap1\n      pop\n        /* \"#utility.yul\":11166:11351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11357:11705   */\n    tag_37:\n        /* \"#utility.yul\":11397:11404   */\n      0x00\n        /* \"#utility.yul\":11420:11440   */\n      tag_220\n        /* \"#utility.yul\":11438:11439   */\n      dup3\n        /* \"#utility.yul\":11420:11440   */\n      tag_182\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":11415:11440   */\n      swap2\n      pop\n        /* \"#utility.yul\":11454:11474   */\n      tag_221\n        /* \"#utility.yul\":11472:11473   */\n      dup4\n        /* \"#utility.yul\":11454:11474   */\n      tag_182\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":11449:11474   */\n      swap3\n      pop\n        /* \"#utility.yul\":11642:11643   */\n      dup2\n        /* \"#utility.yul\":11574:11640   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11570:11644   */\n      div\n        /* \"#utility.yul\":11567:11568   */\n      dup4\n        /* \"#utility.yul\":11564:11645   */\n      gt\n        /* \"#utility.yul\":11559:11560   */\n      dup3\n        /* \"#utility.yul\":11552:11561   */\n      iszero\n        /* \"#utility.yul\":11545:11562   */\n      iszero\n        /* \"#utility.yul\":11541:11646   */\n      and\n        /* \"#utility.yul\":11538:11669   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":11649:11667   */\n      tag_223\n      tag_212\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":11538:11669   */\n    tag_222:\n        /* \"#utility.yul\":11697:11698   */\n      dup3\n        /* \"#utility.yul\":11694:11695   */\n      dup3\n        /* \"#utility.yul\":11690:11699   */\n      mul\n        /* \"#utility.yul\":11679:11699   */\n      swap1\n      pop\n        /* \"#utility.yul\":11357:11705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11711:11807   */\n    tag_155:\n        /* \"#utility.yul\":11748:11755   */\n      0x00\n        /* \"#utility.yul\":11777:11801   */\n      tag_225\n        /* \"#utility.yul\":11795:11800   */\n      dup3\n        /* \"#utility.yul\":11777:11801   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":11766:11801   */\n      swap1\n      pop\n        /* \"#utility.yul\":11711:11807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11813:11935   */\n    tag_227:\n        /* \"#utility.yul\":11876:11883   */\n      0x00\n        /* \"#utility.yul\":11905:11929   */\n      tag_229\n        /* \"#utility.yul\":11923:11928   */\n      dup3\n        /* \"#utility.yul\":11905:11929   */\n      tag_155\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":11894:11929   */\n      swap1\n      pop\n        /* \"#utility.yul\":11813:11935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11941:12067   */\n    tag_226:\n        /* \"#utility.yul\":11978:11985   */\n      0x00\n        /* \"#utility.yul\":12018:12060   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12011:12016   */\n      dup3\n        /* \"#utility.yul\":12007:12061   */\n      and\n        /* \"#utility.yul\":11996:12061   */\n      swap1\n      pop\n        /* \"#utility.yul\":11941:12067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12073:12150   */\n    tag_182:\n        /* \"#utility.yul\":12110:12117   */\n      0x00\n        /* \"#utility.yul\":12139:12144   */\n      dup2\n        /* \"#utility.yul\":12128:12144   */\n      swap1\n      pop\n        /* \"#utility.yul\":12073:12150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12156:12437   */\n    tag_194:\n        /* \"#utility.yul\":12239:12266   */\n      tag_233\n        /* \"#utility.yul\":12261:12265   */\n      dup3\n        /* \"#utility.yul\":12239:12266   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":12231:12237   */\n      dup2\n        /* \"#utility.yul\":12227:12267   */\n      add\n        /* \"#utility.yul\":12369:12375   */\n      dup2\n        /* \"#utility.yul\":12357:12367   */\n      dup2\n        /* \"#utility.yul\":12354:12376   */\n      lt\n        /* \"#utility.yul\":12333:12351   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12321:12331   */\n      dup3\n        /* \"#utility.yul\":12318:12352   */\n      gt\n        /* \"#utility.yul\":12315:12377   */\n      or\n        /* \"#utility.yul\":12312:12400   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":12380:12398   */\n      tag_236\n      tag_25\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":12312:12400   */\n    tag_235:\n        /* \"#utility.yul\":12420:12430   */\n      dup1\n        /* \"#utility.yul\":12416:12418   */\n      0x40\n        /* \"#utility.yul\":12409:12431   */\n      mstore\n        /* \"#utility.yul\":12199:12437   */\n      pop\n        /* \"#utility.yul\":12156:12437   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12443:12676   */\n    tag_50:\n        /* \"#utility.yul\":12482:12485   */\n      0x00\n        /* \"#utility.yul\":12505:12529   */\n      tag_238\n        /* \"#utility.yul\":12523:12528   */\n      dup3\n        /* \"#utility.yul\":12505:12529   */\n      tag_182\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":12496:12529   */\n      swap2\n      pop\n        /* \"#utility.yul\":12551:12617   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12544:12549   */\n      dup3\n        /* \"#utility.yul\":12541:12618   */\n      eq\n        /* \"#utility.yul\":12538:12641   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":12621:12639   */\n      tag_240\n      tag_212\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":12538:12641   */\n    tag_239:\n        /* \"#utility.yul\":12668:12669   */\n      0x01\n        /* \"#utility.yul\":12661:12666   */\n      dup3\n        /* \"#utility.yul\":12657:12670   */\n      add\n        /* \"#utility.yul\":12650:12670   */\n      swap1\n      pop\n        /* \"#utility.yul\":12443:12676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12682:12862   */\n    tag_212:\n        /* \"#utility.yul\":12730:12807   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12727:12728   */\n      0x00\n        /* \"#utility.yul\":12720:12808   */\n      mstore\n        /* \"#utility.yul\":12827:12831   */\n      0x11\n        /* \"#utility.yul\":12824:12825   */\n      0x04\n        /* \"#utility.yul\":12817:12832   */\n      mstore\n        /* \"#utility.yul\":12851:12855   */\n      0x24\n        /* \"#utility.yul\":12848:12849   */\n      0x00\n        /* \"#utility.yul\":12841:12856   */\n      revert\n        /* \"#utility.yul\":12868:13048   */\n    tag_218:\n        /* \"#utility.yul\":12916:12993   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12913:12914   */\n      0x00\n        /* \"#utility.yul\":12906:12994   */\n      mstore\n        /* \"#utility.yul\":13013:13017   */\n      0x12\n        /* \"#utility.yul\":13010:13011   */\n      0x04\n        /* \"#utility.yul\":13003:13018   */\n      mstore\n        /* \"#utility.yul\":13037:13041   */\n      0x24\n        /* \"#utility.yul\":13034:13035   */\n      0x00\n        /* \"#utility.yul\":13027:13042   */\n      revert\n        /* \"#utility.yul\":13054:13234   */\n    tag_29:\n        /* \"#utility.yul\":13102:13179   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13099:13100   */\n      0x00\n        /* \"#utility.yul\":13092:13180   */\n      mstore\n        /* \"#utility.yul\":13199:13203   */\n      0x32\n        /* \"#utility.yul\":13196:13197   */\n      0x04\n        /* \"#utility.yul\":13189:13204   */\n      mstore\n        /* \"#utility.yul\":13223:13227   */\n      0x24\n        /* \"#utility.yul\":13220:13221   */\n      0x00\n        /* \"#utility.yul\":13213:13228   */\n      revert\n        /* \"#utility.yul\":13240:13420   */\n    tag_25:\n        /* \"#utility.yul\":13288:13365   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13285:13286   */\n      0x00\n        /* \"#utility.yul\":13278:13366   */\n      mstore\n        /* \"#utility.yul\":13385:13389   */\n      0x41\n        /* \"#utility.yul\":13382:13383   */\n      0x04\n        /* \"#utility.yul\":13375:13390   */\n      mstore\n        /* \"#utility.yul\":13409:13413   */\n      0x24\n        /* \"#utility.yul\":13406:13407   */\n      0x00\n        /* \"#utility.yul\":13399:13414   */\n      revert\n        /* \"#utility.yul\":13426:13543   */\n    tag_103:\n        /* \"#utility.yul\":13535:13536   */\n      0x00\n        /* \"#utility.yul\":13532:13533   */\n      dup1\n        /* \"#utility.yul\":13525:13537   */\n      revert\n        /* \"#utility.yul\":13549:13666   */\n    tag_67:\n        /* \"#utility.yul\":13658:13659   */\n      0x00\n        /* \"#utility.yul\":13655:13656   */\n      dup1\n        /* \"#utility.yul\":13648:13660   */\n      revert\n        /* \"#utility.yul\":13672:13789   */\n    tag_130:\n        /* \"#utility.yul\":13781:13782   */\n      0x00\n        /* \"#utility.yul\":13778:13779   */\n      dup1\n        /* \"#utility.yul\":13771:13783   */\n      revert\n        /* \"#utility.yul\":13795:13912   */\n    tag_127:\n        /* \"#utility.yul\":13904:13905   */\n      0x00\n        /* \"#utility.yul\":13901:13902   */\n      dup1\n        /* \"#utility.yul\":13894:13906   */\n      revert\n        /* \"#utility.yul\":13918:14020   */\n    tag_234:\n        /* \"#utility.yul\":13959:13965   */\n      0x00\n        /* \"#utility.yul\":14010:14012   */\n      0x1f\n        /* \"#utility.yul\":14006:14013   */\n      not\n        /* \"#utility.yul\":14001:14003   */\n      0x1f\n        /* \"#utility.yul\":13994:13999   */\n      dup4\n        /* \"#utility.yul\":13990:14004   */\n      add\n        /* \"#utility.yul\":13986:14014   */\n      and\n        /* \"#utility.yul\":13976:14014   */\n      swap1\n      pop\n        /* \"#utility.yul\":13918:14020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14026:14190   */\n    tag_178:\n        /* \"#utility.yul\":14166:14182   */\n      0x496e76616c6964204d6174696321000000000000000000000000000000000000\n        /* \"#utility.yul\":14162:14163   */\n      0x00\n        /* \"#utility.yul\":14154:14160   */\n      dup3\n        /* \"#utility.yul\":14150:14164   */\n      add\n        /* \"#utility.yul\":14143:14183   */\n      mstore\n        /* \"#utility.yul\":14026:14190   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14196:14318   */\n    tag_98:\n        /* \"#utility.yul\":14269:14293   */\n      tag_252\n        /* \"#utility.yul\":14287:14292   */\n      dup2\n        /* \"#utility.yul\":14269:14293   */\n      tag_155\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":14262:14267   */\n      dup2\n        /* \"#utility.yul\":14259:14294   */\n      eq\n        /* \"#utility.yul\":14249:14312   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":14308:14309   */\n      0x00\n        /* \"#utility.yul\":14305:14306   */\n      dup1\n        /* \"#utility.yul\":14298:14310   */\n      revert\n        /* \"#utility.yul\":14249:14312   */\n    tag_253:\n        /* \"#utility.yul\":14196:14318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14324:14498   */\n    tag_118:\n        /* \"#utility.yul\":14423:14473   */\n      tag_255\n        /* \"#utility.yul\":14467:14472   */\n      dup2\n        /* \"#utility.yul\":14423:14473   */\n      tag_227\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":14416:14421   */\n      dup2\n        /* \"#utility.yul\":14413:14474   */\n      eq\n        /* \"#utility.yul\":14403:14492   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":14488:14489   */\n      0x00\n        /* \"#utility.yul\":14485:14486   */\n      dup1\n        /* \"#utility.yul\":14478:14490   */\n      revert\n        /* \"#utility.yul\":14403:14492   */\n    tag_256:\n        /* \"#utility.yul\":14324:14498   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14504:14626   */\n    tag_121:\n        /* \"#utility.yul\":14577:14601   */\n      tag_258\n        /* \"#utility.yul\":14595:14600   */\n      dup2\n        /* \"#utility.yul\":14577:14601   */\n      tag_182\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":14570:14575   */\n      dup2\n        /* \"#utility.yul\":14567:14602   */\n      eq\n        /* \"#utility.yul\":14557:14620   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":14616:14617   */\n      0x00\n        /* \"#utility.yul\":14613:14614   */\n      dup1\n        /* \"#utility.yul\":14606:14618   */\n      revert\n        /* \"#utility.yul\":14557:14620   */\n    tag_259:\n        /* \"#utility.yul\":14504:14626   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c353d39db401cb0e2a21906d7b3fa3dfe1a55151e062ce620c405963a10fdce164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610cdf806100206000396000f3fe6080604052600436106100295760003560e01c806390482d721461002e5780639728d85f14610057575b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610700565b610073565b005b610071600480360381019061006c9190610688565b610111565b005b82600190805190602001906100899291906103b3565b5081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000825190506000341161015a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101519061087e565b60405180910390fd5b60005b818110156103ad576000600267ffffffffffffffff81111561018257610181610be7565b5b6040519080825280602002602001820160405280156101b05781602001602082028036833780820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816000815181106101ea576101e9610bb8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084828151811061023757610236610bb8565b5b60200260200101518160018151811061025357610252610bb8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006127108584815181106102a5576102a4610bb8565b5b6020026020010151346102b89190610a38565b6102c29190610a07565b9050600260009054906101000a905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab5828433610e104261032191906109b1565b6040518563ffffffff1660e01b8152600401610340949392919061089e565b600060405180830381600087803b15801561035a57600080fd5b505af115801561036e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610397919061076f565b50505080806103a590610b11565b91505061015d565b50505050565b82805482825590600052602060002090810192821561042c579160200282015b8281111561042b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906103d3565b5b509050610439919061043d565b5090565b5b8082111561045657600081600090555060010161043e565b5090565b600061046d6104688461090f565b6108ea565b905080838252602082019050828560208602820111156104905761048f610c1b565b5b60005b858110156104c057816104a688826105aa565b845260208401935060208301925050600181019050610493565b5050509392505050565b60006104dd6104d88461093b565b6108ea565b90508083825260208201905082856020860282011115610500576104ff610c1b565b5b60005b858110156105305781610516888261065e565b845260208401935060208301925050600181019050610503565b5050509392505050565b600061054d6105488461093b565b6108ea565b905080838252602082019050828560208602820111156105705761056f610c1b565b5b60005b858110156105a057816105868882610673565b845260208401935060208301925050600181019050610573565b5050509392505050565b6000813590506105b981610c64565b92915050565b600082601f8301126105d4576105d3610c16565b5b81356105e484826020860161045a565b91505092915050565b600082601f83011261060257610601610c16565b5b81356106128482602086016104ca565b91505092915050565b600082601f8301126106305761062f610c16565b5b815161064084826020860161053a565b91505092915050565b60008135905061065881610c7b565b92915050565b60008135905061066d81610c92565b92915050565b60008151905061068281610c92565b92915050565b6000806040838503121561069f5761069e610c25565b5b600083013567ffffffffffffffff8111156106bd576106bc610c20565b5b6106c9858286016105bf565b925050602083013567ffffffffffffffff8111156106ea576106e9610c20565b5b6106f6858286016105ed565b9150509250929050565b60008060006060848603121561071957610718610c25565b5b600084013567ffffffffffffffff81111561073757610736610c20565b5b610743868287016105bf565b935050602061075486828701610649565b9250506040610765868287016105aa565b9150509250925092565b60006020828403121561078557610784610c25565b5b600082015167ffffffffffffffff8111156107a3576107a2610c20565b5b6107af8482850161061b565b91505092915050565b60006107c483836107d0565b60208301905092915050565b6107d981610a92565b82525050565b6107e881610a92565b82525050565b60006107f982610977565b610803818561098f565b935061080e83610967565b8060005b8381101561083f57815161082688826107b8565b975061083183610982565b925050600181019050610812565b5085935050505092915050565b6000610859600e836109a0565b915061086482610c3b565b602082019050919050565b61087881610ad6565b82525050565b600060208201905081810360008301526108978161084c565b9050919050565b60006080820190506108b3600083018761086f565b81810360208301526108c581866107ee565b90506108d460408301856107df565b6108e1606083018461086f565b95945050505050565b60006108f4610905565b90506109008282610ae0565b919050565b6000604051905090565b600067ffffffffffffffff82111561092a57610929610be7565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561095657610955610be7565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006109bc82610ad6565b91506109c783610ad6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109fc576109fb610b5a565b5b828201905092915050565b6000610a1282610ad6565b9150610a1d83610ad6565b925082610a2d57610a2c610b89565b5b828204905092915050565b6000610a4382610ad6565b9150610a4e83610ad6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a8757610a86610b5a565b5b828202905092915050565b6000610a9d82610ab6565b9050919050565b6000610aaf82610a92565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610ae982610c2a565b810181811067ffffffffffffffff82111715610b0857610b07610be7565b5b80604052505050565b6000610b1c82610ad6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4f57610b4e610b5a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f496e76616c6964204d6174696321000000000000000000000000000000000000600082015250565b610c6d81610a92565b8114610c7857600080fd5b50565b610c8481610aa4565b8114610c8f57600080fd5b50565b610c9b81610ad6565b8114610ca657600080fd5b5056fea2646970667358221220c353d39db401cb0e2a21906d7b3fa3dfe1a55151e062ce620c405963a10fdce164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCDF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90482D72 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x9728D85F EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST STOP JUMPDEST DUP3 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x89 SWAP3 SWAP2 SWAP1 PUSH2 0x3B3 JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD SWAP1 POP PUSH1 0x0 CALLVALUE GT PUSH2 0x15A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x182 JUMPI PUSH2 0x181 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1E9 PUSH2 0xBB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x237 JUMPI PUSH2 0x236 PUSH2 0xBB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x253 JUMPI PUSH2 0x252 PUSH2 0xBB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x2710 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2A5 JUMPI PUSH2 0x2A4 PUSH2 0xBB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLVALUE PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7FF36AB5 DUP3 DUP5 CALLER PUSH2 0xE10 TIMESTAMP PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x3A5 SWAP1 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x42C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x42B JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3D3 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x43E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D PUSH2 0x468 DUP5 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x490 JUMPI PUSH2 0x48F PUSH2 0xC1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI DUP2 PUSH2 0x4A6 DUP9 DUP3 PUSH2 0x5AA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x493 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD PUSH2 0x4D8 DUP5 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0xC1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x530 JUMPI DUP2 PUSH2 0x516 DUP9 DUP3 PUSH2 0x65E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x503 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D PUSH2 0x548 DUP5 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56F PUSH2 0xC1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5A0 JUMPI DUP2 PUSH2 0x586 DUP9 DUP3 PUSH2 0x673 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x573 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B9 DUP2 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0xC16 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5E4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x602 JUMPI PUSH2 0x601 PUSH2 0xC16 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x612 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x630 JUMPI PUSH2 0x62F PUSH2 0xC16 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x640 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x53A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x658 DUP2 PUSH2 0xC7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66D DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x682 DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69E PUSH2 0xC25 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6BD JUMPI PUSH2 0x6BC PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH2 0x6C9 DUP6 DUP3 DUP7 ADD PUSH2 0x5BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6EA JUMPI PUSH2 0x6E9 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH2 0x6F6 DUP6 DUP3 DUP7 ADD PUSH2 0x5ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0xC25 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x737 JUMPI PUSH2 0x736 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH2 0x743 DUP7 DUP3 DUP8 ADD PUSH2 0x5BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x754 DUP7 DUP3 DUP8 ADD PUSH2 0x649 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x765 DUP7 DUP3 DUP8 ADD PUSH2 0x5AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH2 0x784 PUSH2 0xC25 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x7A2 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH2 0x7AF DUP5 DUP3 DUP6 ADD PUSH2 0x61B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C4 DUP4 DUP4 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D9 DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7E8 DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F9 DUP3 PUSH2 0x977 JUMP JUMPDEST PUSH2 0x803 DUP2 DUP6 PUSH2 0x98F JUMP JUMPDEST SWAP4 POP PUSH2 0x80E DUP4 PUSH2 0x967 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83F JUMPI DUP2 MLOAD PUSH2 0x826 DUP9 DUP3 PUSH2 0x7B8 JUMP JUMPDEST SWAP8 POP PUSH2 0x831 DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x812 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x859 PUSH1 0xE DUP4 PUSH2 0x9A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x864 DUP3 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x878 DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x897 DUP2 PUSH2 0x84C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x8B3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x86F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x8C5 DUP2 DUP7 PUSH2 0x7EE JUMP JUMPDEST SWAP1 POP PUSH2 0x8D4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x8E1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x86F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 PUSH2 0x905 JUMP JUMPDEST SWAP1 POP PUSH2 0x900 DUP3 DUP3 PUSH2 0xAE0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x92A JUMPI PUSH2 0x929 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x956 JUMPI PUSH2 0x955 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BC DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C7 DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9FC JUMPI PUSH2 0x9FB PUSH2 0xB5A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA1D DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA2D JUMPI PUSH2 0xA2C PUSH2 0xB89 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA43 DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4E DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA86 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9D DUP3 PUSH2 0xAB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAF DUP3 PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE9 DUP3 PUSH2 0xC2A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB08 JUMPI PUSH2 0xB07 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1C DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4E PUSH2 0xB5A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6174696321000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP2 EQ PUSH2 0xC78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0xAA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC9B DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP2 EQ PUSH2 0xCA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 MSTORE8 0xD3 SWAP14 0xB4 ADD 0xCB 0xE 0x2A 0x21 SWAP1 PUSH14 0x7B3FA3DFE1A55151E062CE620C40 MSIZE PUSH4 0xA10FDCE1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "232:1164:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@initialize_485": {
									"entryPoint": 115,
									"id": 485,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapAndPay_585": {
									"entryPoint": 273,
									"id": 585,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IUniswapV2Router02_$982": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_contract$_IUniswapV2Router02_$982t_address": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IUniswapV2Router02_$982": {
									"entryPoint": 2724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 2833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067": {
									"entryPoint": 3131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IUniswapV2Router02_$982": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14629:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:6",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:6"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:6",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:6"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:6"
															},
															"nodeType": "YulIf",
															"src": "350:143:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:6",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:6"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:6"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:6"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:6",
														"type": ""
													}
												],
												"src": "24:722:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:6",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:6"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:6",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:6"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:6"
															},
															"nodeType": "YulIf",
															"src": "1095:143:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:6",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:6"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:6"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:6"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:6",
														"type": ""
													}
												],
												"src": "769:722:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1627:631:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1637:90:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1719:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1662:56:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1662:64:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1646:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:81:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1637:5:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1736:16:6",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "1747:5:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1740:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1769:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1776:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1762:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1762:21:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1792:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1803:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1810:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1799:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:16:6"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1792:3:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1825:17:6",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1836:6:6"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1829:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1891:103:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1905:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1861:3:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1870:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1878:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1866:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1866:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1857:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1857:27:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1886:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1854:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:36:6"
															},
															"nodeType": "YulIf",
															"src": "1851:143:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2063:189:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2078:21:6",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "2096:3:6"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "2082:10:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2120:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "2157:10:6"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "2169:3:6"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "2125:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2125:48:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2113:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2113:61:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2113:61:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2187:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2198:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2203:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2194:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2194:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2187:3:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2221:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2232:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2237:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2228:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2228:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2221:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2025:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2022:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2036:18:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2038:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2047:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2050:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2043:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2043:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2038:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2007:14:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2009:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2018:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "2013:1:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2003:249:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1597:6:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1605:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1613:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1621:5:6",
														"type": ""
													}
												],
												"src": "1514:744:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2316:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2326:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2348:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2335:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2326:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2391:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2364:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2364:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2364:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2294:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2302:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2310:5:6",
														"type": ""
													}
												],
												"src": "2264:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2503:293:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2552:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2554:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2554:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2554:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2539:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2527:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2527:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2546:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2523:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2523:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2516:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:35:6"
															},
															"nodeType": "YulIf",
															"src": "2513:122:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2644:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2671:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2658:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2648:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2687:103:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2763:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2759:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2778:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2786:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2696:62:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:94:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2687:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2481:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2489:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2497:5:6",
														"type": ""
													}
												],
												"src": "2426:370:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2896:293:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2945:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2947:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2947:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2947:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2924:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2932:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2920:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2920:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2939:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2916:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2916:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2909:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2909:35:6"
															},
															"nodeType": "YulIf",
															"src": "2906:122:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3037:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3064:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3051:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3051:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3041:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3080:103:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3156:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3164:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3152:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3152:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3171:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3179:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3089:62:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3089:94:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3080:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2874:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2882:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2890:5:6",
														"type": ""
													}
												],
												"src": "2819:370:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3300:297:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3349:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3351:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3351:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3351:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3328:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3336:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3324:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3324:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3343:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3320:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:35:6"
															},
															"nodeType": "YulIf",
															"src": "3310:122:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3441:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3461:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3455:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3445:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3477:114:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3564:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3572:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3560:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3560:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3579:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3587:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3486:73:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:105:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3477:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3278:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3286:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3294:5:6",
														"type": ""
													}
												],
												"src": "3212:385:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3681:113:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3691:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3713:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3700:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3691:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3782:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IUniswapV2Router02_$982",
																	"nodeType": "YulIdentifier",
																	"src": "3729:52:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3729:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3729:59:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IUniswapV2Router02_$982",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3659:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3667:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3675:5:6",
														"type": ""
													}
												],
												"src": "3603:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3852:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3862:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3884:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3871:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3862:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3927:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3900:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3900:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3830:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3838:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3846:5:6",
														"type": ""
													}
												],
												"src": "3800:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4008:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4018:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4033:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4027:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4027:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4018:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4076:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4049:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3986:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3994:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4002:5:6",
														"type": ""
													}
												],
												"src": "3945:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4227:761:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4273:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4275:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4275:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4275:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4248:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4257:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4244:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4244:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4269:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4240:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:32:6"
															},
															"nodeType": "YulIf",
															"src": "4237:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4366:302:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4381:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4412:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4423:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4408:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4408:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4395:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4385:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4473:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4475:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4475:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4475:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4445:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4453:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4442:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "4439:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4570:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4630:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4641:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4626:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4626:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4650:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4580:45:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4580:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4570:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4678:303:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4693:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4724:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4735:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4720:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4720:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4707:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4707:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4697:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4786:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4788:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4788:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4788:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4758:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4766:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4755:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4755:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "4752:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4883:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4943:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4954:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4939:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4939:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4963:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4893:45:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4893:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4883:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4189:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4200:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4212:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4220:6:6",
														"type": ""
													}
												],
												"src": "4094:894:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5145:730:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5191:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5193:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5193:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5193:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5166:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5175:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5162:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5162:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:32:6"
															},
															"nodeType": "YulIf",
															"src": "5155:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5284:302:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5299:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5330:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5341:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5326:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5326:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5313:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5313:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5303:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5391:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5393:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5393:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5393:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5363:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5371:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5360:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5360:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "5357:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5488:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5548:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5559:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5544:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5544:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5568:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5498:45:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5488:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5596:144:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5625:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5615:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5641:89:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5702:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5713:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5698:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5698:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5722:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IUniswapV2Router02_$982",
																			"nodeType": "YulIdentifier",
																			"src": "5651:46:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5651:79:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5641:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5750:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5765:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5779:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5769:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5795:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5830:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5841:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5826:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5826:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5850:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5805:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5805:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5795:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_contract$_IUniswapV2Router02_$982t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5099:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5110:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5122:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5130:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5138:6:6",
														"type": ""
													}
												],
												"src": "4994:881:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5983:452:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6029:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6031:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6031:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6031:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6004:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6013:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6000:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6000:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6025:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5996:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:32:6"
															},
															"nodeType": "YulIf",
															"src": "5993:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6122:306:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6137:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6161:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6172:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6157:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6157:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6151:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6151:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6141:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6222:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6224:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6224:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6224:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6194:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6202:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6191:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6191:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "6188:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6319:99:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6390:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6401:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6386:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6386:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6410:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6329:56:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6329:89:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6319:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5953:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5964:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5976:6:6",
														"type": ""
													}
												],
												"src": "5881:554:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6521:99:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6565:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6573:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6531:33:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6531:46:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6586:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6604:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6609:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6600:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6600:14:6"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "6586:10:6"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6494:6:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6502:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "6510:10:6",
														"type": ""
													}
												],
												"src": "6441:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6681:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6698:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6721:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6703:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6703:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6691:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6691:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6691:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6669:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6676:3:6",
														"type": ""
													}
												],
												"src": "6626:108:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6805:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6822:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6845:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6827:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6827:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6815:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6815:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6793:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6800:3:6",
														"type": ""
													}
												],
												"src": "6740:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7018:608:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7028:68:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7090:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7042:47:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7042:54:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7032:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7105:93:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7186:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7191:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7112:73:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:86:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7207:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7272:5:6"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7222:49:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7222:56:6"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "7211:7:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7287:21:6",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "7301:7:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7291:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7377:224:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7391:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7418:6:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7412:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7412:13:6"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "7395:13:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7438:70:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "7489:13:6"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7504:3:6"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "7445:43:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7445:63:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7438:3:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7521:70:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7584:6:6"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7531:52:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7531:60:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7521:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7339:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7342:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7336:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7336:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7350:18:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7352:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7361:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7364:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7357:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7357:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7352:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7321:14:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7323:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7332:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "7327:1:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7317:284:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7610:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7617:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7610:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6997:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7004:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7013:3:6",
														"type": ""
													}
												],
												"src": "6894:732:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7778:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7788:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7854:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7859:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7795:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7795:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7788:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7960:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067",
																	"nodeType": "YulIdentifier",
																	"src": "7871:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7871:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7871:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7973:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7984:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7989:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7980:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7980:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7766:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7774:3:6",
														"type": ""
													}
												],
												"src": "7632:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8069:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8086:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8109:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8091:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8091:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8079:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8079:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8079:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8057:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8064:3:6",
														"type": ""
													}
												],
												"src": "8004:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8299:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8309:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8321:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8332:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8317:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8309:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8356:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8367:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8352:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8352:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8375:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8381:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8371:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8345:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8401:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8535:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8409:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8409:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8401:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8279:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8294:4:6",
														"type": ""
													}
												],
												"src": "8128:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8785:472:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8795:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8807:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8818:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8803:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8803:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8795:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8876:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8889:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8900:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8885:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8885:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8832:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8832:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8832:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8924:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8935:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8920:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8920:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8944:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8950:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8940:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8940:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8913:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8913:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8913:48:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8970:116:6",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9072:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9081:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8978:93:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8978:108:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8970:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9140:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9153:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9164:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9149:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9149:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9096:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9096:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9096:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9222:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9235:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9246:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9231:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9231:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9178:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9178:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9178:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8733:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8745:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8753:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8761:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8769:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8780:4:6",
														"type": ""
													}
												],
												"src": "8553:704:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9304:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9314:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9324:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9324:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9314:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9373:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9381:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9353:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9353:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9288:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9297:6:6",
														"type": ""
													}
												],
												"src": "9263:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9438:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9448:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9458:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9458:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9448:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9431:6:6",
														"type": ""
													}
												],
												"src": "9398:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9561:229:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9666:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9668:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9668:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9668:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9638:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9646:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9635:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9635:30:6"
															},
															"nodeType": "YulIf",
															"src": "9632:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9698:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9710:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9718:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9706:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9706:17:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9698:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9760:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9772:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9778:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9768:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9768:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9760:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9556:4:6",
														"type": ""
													}
												],
												"src": "9479:311:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9878:229:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9983:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9985:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9985:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9985:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9955:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9963:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9952:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9952:30:6"
															},
															"nodeType": "YulIf",
															"src": "9949:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10015:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10027:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10035:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10023:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10023:17:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10015:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10077:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10089:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10095:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10085:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10077:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9862:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9873:4:6",
														"type": ""
													}
												],
												"src": "9796:311:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10185:60:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10195:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "10203:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10195:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10216:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10228:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10233:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10224:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10224:14:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10216:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10172:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10180:4:6",
														"type": ""
													}
												],
												"src": "10113:132:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10325:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10336:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10352:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10346:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10346:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10336:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10308:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10318:6:6",
														"type": ""
													}
												],
												"src": "10251:114:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10446:38:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10456:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10468:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10473:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10464:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10464:14:6"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "10456:4:6"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10433:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "10441:4:6",
														"type": ""
													}
												],
												"src": "10371:113:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10601:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10618:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10623:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10611:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10611:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10611:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10639:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10658:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10663:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10654:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10654:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10639:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10573:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10578:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10589:11:6",
														"type": ""
													}
												],
												"src": "10490:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10776:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10793:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10798:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10786:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10786:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10786:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10814:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10833:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10838:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10829:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10829:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10814:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10748:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10753:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10764:11:6",
														"type": ""
													}
												],
												"src": "10680:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10899:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10909:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10932:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10914:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10914:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10909:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10943:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10966:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10948:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10948:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10943:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11106:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11108:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11108:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11108:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11027:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11034:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11102:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11030:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11030:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11024:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11024:81:6"
															},
															"nodeType": "YulIf",
															"src": "11021:107:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11138:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11149:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11152:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11145:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11145:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11138:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10886:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10889:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10895:3:6",
														"type": ""
													}
												],
												"src": "10855:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11208:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11218:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11241:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11223:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11223:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11218:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11252:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11275:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11257:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11257:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11252:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11299:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11301:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11301:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11301:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11296:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11289:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11289:9:6"
															},
															"nodeType": "YulIf",
															"src": "11286:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11331:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11340:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11343:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11336:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11336:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11331:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11197:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11200:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11206:1:6",
														"type": ""
													}
												],
												"src": "11166:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11405:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11415:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11438:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11420:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11420:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11415:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11449:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11472:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11454:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11454:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11449:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11647:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11649:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11649:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11649:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11559:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11552:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11552:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11545:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11545:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11567:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11574:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11642:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11570:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11570:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11564:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11564:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11541:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11541:105:6"
															},
															"nodeType": "YulIf",
															"src": "11538:131:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11679:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11694:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11697:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11690:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11690:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11679:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11388:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11391:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11397:7:6",
														"type": ""
													}
												],
												"src": "11357:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11756:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11766:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11795:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11777:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11777:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11766:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11738:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11748:7:6",
														"type": ""
													}
												],
												"src": "11711:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11884:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11894:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11923:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11905:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11905:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11894:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IUniswapV2Router02_$982",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11866:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11876:7:6",
														"type": ""
													}
												],
												"src": "11813:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11986:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11996:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12011:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12018:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12007:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12007:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11996:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11968:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11978:7:6",
														"type": ""
													}
												],
												"src": "11941:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12118:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12128:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12139:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12128:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12100:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12110:7:6",
														"type": ""
													}
												],
												"src": "12073:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12199:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12209:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12231:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12261:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12239:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12239:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12227:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12227:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12213:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12378:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12380:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12380:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12380:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12321:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12333:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12318:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12318:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12357:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12369:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12354:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12354:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12315:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12315:62:6"
															},
															"nodeType": "YulIf",
															"src": "12312:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12416:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12420:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12409:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12409:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12409:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12185:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12193:4:6",
														"type": ""
													}
												],
												"src": "12156:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12486:190:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12496:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12523:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12505:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12505:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12496:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12619:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12621:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12621:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12621:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12544:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12541:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12541:77:6"
															},
															"nodeType": "YulIf",
															"src": "12538:103:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12650:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12661:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12668:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12657:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12657:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12650:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12472:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12482:3:6",
														"type": ""
													}
												],
												"src": "12443:233:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12710:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12727:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12730:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12720:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12720:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12720:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12824:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12827:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12817:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12817:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12817:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12848:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12851:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12841:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12841:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12841:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12682:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12896:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12913:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12916:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12906:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12906:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12906:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13010:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13013:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13003:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13003:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13003:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13034:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13037:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13027:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13027:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13027:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12868:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13082:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13099:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13102:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13092:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13092:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13092:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13196:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13199:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13189:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13189:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13189:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13220:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13223:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13213:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13213:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13054:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13268:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13285:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13288:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13278:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13278:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13278:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13382:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13385:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13375:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13375:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13375:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13406:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13409:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13399:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13399:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13399:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13240:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13515:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13532:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13535:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13525:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13525:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13525:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "13426:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13638:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13655:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13658:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13648:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13648:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13648:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "13549:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13761:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13778:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13781:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13771:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13771:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13771:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13672:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13884:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13901:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13904:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13894:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13894:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13894:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13795:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13966:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13976:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13994:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14001:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13990:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13990:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14010:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14006:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14006:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13986:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13986:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13976:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13949:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13959:6:6",
														"type": ""
													}
												],
												"src": "13918:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14132:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14154:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14162:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14150:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14150:14:6"
																	},
																	{
																		"hexValue": "496e76616c6964204d6174696321",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14166:16:6",
																		"type": "",
																		"value": "Invalid Matic!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14143:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14143:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14143:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14124:6:6",
														"type": ""
													}
												],
												"src": "14026:164:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14239:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14296:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14305:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14308:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14298:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14298:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14298:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14262:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14287:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14269:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14269:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14259:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14259:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14252:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14252:43:6"
															},
															"nodeType": "YulIf",
															"src": "14249:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14232:5:6",
														"type": ""
													}
												],
												"src": "14196:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14393:105:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14476:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14485:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14488:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14478:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14478:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14478:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14416:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14467:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IUniswapV2Router02_$982",
																					"nodeType": "YulIdentifier",
																					"src": "14423:43:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14423:50:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14413:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14413:61:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14406:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14406:69:6"
															},
															"nodeType": "YulIf",
															"src": "14403:89:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IUniswapV2Router02_$982",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14386:5:6",
														"type": ""
													}
												],
												"src": "14324:174:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14547:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14604:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14613:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14616:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14606:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14606:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14606:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14570:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14595:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14577:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14577:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14567:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14567:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14560:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14560:43:6"
															},
															"nodeType": "YulIf",
															"src": "14557:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14540:5:6",
														"type": ""
													}
												],
												"src": "14504:122:6"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IUniswapV2Router02_$982(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IUniswapV2Router02_$982(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_contract$_IUniswapV2Router02_$982t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IUniswapV2Router02_$982(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IUniswapV2Router02_$982(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Matic!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IUniswapV2Router02_$982(value) {\n        if iszero(eq(value, cleanup_t_contract$_IUniswapV2Router02_$982(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c806390482d721461002e5780639728d85f14610057575b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610700565b610073565b005b610071600480360381019061006c9190610688565b610111565b005b82600190805190602001906100899291906103b3565b5081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000825190506000341161015a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101519061087e565b60405180910390fd5b60005b818110156103ad576000600267ffffffffffffffff81111561018257610181610be7565b5b6040519080825280602002602001820160405280156101b05781602001602082028036833780820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816000815181106101ea576101e9610bb8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084828151811061023757610236610bb8565b5b60200260200101518160018151811061025357610252610bb8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006127108584815181106102a5576102a4610bb8565b5b6020026020010151346102b89190610a38565b6102c29190610a07565b9050600260009054906101000a905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab5828433610e104261032191906109b1565b6040518563ffffffff1660e01b8152600401610340949392919061089e565b600060405180830381600087803b15801561035a57600080fd5b505af115801561036e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610397919061076f565b50505080806103a590610b11565b91505061015d565b50505050565b82805482825590600052602060002090810192821561042c579160200282015b8281111561042b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906103d3565b5b509050610439919061043d565b5090565b5b8082111561045657600081600090555060010161043e565b5090565b600061046d6104688461090f565b6108ea565b905080838252602082019050828560208602820111156104905761048f610c1b565b5b60005b858110156104c057816104a688826105aa565b845260208401935060208301925050600181019050610493565b5050509392505050565b60006104dd6104d88461093b565b6108ea565b90508083825260208201905082856020860282011115610500576104ff610c1b565b5b60005b858110156105305781610516888261065e565b845260208401935060208301925050600181019050610503565b5050509392505050565b600061054d6105488461093b565b6108ea565b905080838252602082019050828560208602820111156105705761056f610c1b565b5b60005b858110156105a057816105868882610673565b845260208401935060208301925050600181019050610573565b5050509392505050565b6000813590506105b981610c64565b92915050565b600082601f8301126105d4576105d3610c16565b5b81356105e484826020860161045a565b91505092915050565b600082601f83011261060257610601610c16565b5b81356106128482602086016104ca565b91505092915050565b600082601f8301126106305761062f610c16565b5b815161064084826020860161053a565b91505092915050565b60008135905061065881610c7b565b92915050565b60008135905061066d81610c92565b92915050565b60008151905061068281610c92565b92915050565b6000806040838503121561069f5761069e610c25565b5b600083013567ffffffffffffffff8111156106bd576106bc610c20565b5b6106c9858286016105bf565b925050602083013567ffffffffffffffff8111156106ea576106e9610c20565b5b6106f6858286016105ed565b9150509250929050565b60008060006060848603121561071957610718610c25565b5b600084013567ffffffffffffffff81111561073757610736610c20565b5b610743868287016105bf565b935050602061075486828701610649565b9250506040610765868287016105aa565b9150509250925092565b60006020828403121561078557610784610c25565b5b600082015167ffffffffffffffff8111156107a3576107a2610c20565b5b6107af8482850161061b565b91505092915050565b60006107c483836107d0565b60208301905092915050565b6107d981610a92565b82525050565b6107e881610a92565b82525050565b60006107f982610977565b610803818561098f565b935061080e83610967565b8060005b8381101561083f57815161082688826107b8565b975061083183610982565b925050600181019050610812565b5085935050505092915050565b6000610859600e836109a0565b915061086482610c3b565b602082019050919050565b61087881610ad6565b82525050565b600060208201905081810360008301526108978161084c565b9050919050565b60006080820190506108b3600083018761086f565b81810360208301526108c581866107ee565b90506108d460408301856107df565b6108e1606083018461086f565b95945050505050565b60006108f4610905565b90506109008282610ae0565b919050565b6000604051905090565b600067ffffffffffffffff82111561092a57610929610be7565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561095657610955610be7565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006109bc82610ad6565b91506109c783610ad6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109fc576109fb610b5a565b5b828201905092915050565b6000610a1282610ad6565b9150610a1d83610ad6565b925082610a2d57610a2c610b89565b5b828204905092915050565b6000610a4382610ad6565b9150610a4e83610ad6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a8757610a86610b5a565b5b828202905092915050565b6000610a9d82610ab6565b9050919050565b6000610aaf82610a92565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610ae982610c2a565b810181811067ffffffffffffffff82111715610b0857610b07610be7565b5b80604052505050565b6000610b1c82610ad6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4f57610b4e610b5a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f496e76616c6964204d6174696321000000000000000000000000000000000000600082015250565b610c6d81610a92565b8114610c7857600080fd5b50565b610c8481610aa4565b8114610c8f57600080fd5b50565b610c9b81610ad6565b8114610ca657600080fd5b5056fea2646970667358221220c353d39db401cb0e2a21906d7b3fa3dfe1a55151e062ce620c405963a10fdce164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90482D72 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x9728D85F EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST STOP JUMPDEST DUP3 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x89 SWAP3 SWAP2 SWAP1 PUSH2 0x3B3 JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD SWAP1 POP PUSH1 0x0 CALLVALUE GT PUSH2 0x15A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x182 JUMPI PUSH2 0x181 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1E9 PUSH2 0xBB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x237 JUMPI PUSH2 0x236 PUSH2 0xBB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x253 JUMPI PUSH2 0x252 PUSH2 0xBB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x2710 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2A5 JUMPI PUSH2 0x2A4 PUSH2 0xBB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLVALUE PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7FF36AB5 DUP3 DUP5 CALLER PUSH2 0xE10 TIMESTAMP PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x3A5 SWAP1 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x42C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x42B JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3D3 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x43E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D PUSH2 0x468 DUP5 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x490 JUMPI PUSH2 0x48F PUSH2 0xC1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI DUP2 PUSH2 0x4A6 DUP9 DUP3 PUSH2 0x5AA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x493 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD PUSH2 0x4D8 DUP5 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0xC1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x530 JUMPI DUP2 PUSH2 0x516 DUP9 DUP3 PUSH2 0x65E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x503 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D PUSH2 0x548 DUP5 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56F PUSH2 0xC1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5A0 JUMPI DUP2 PUSH2 0x586 DUP9 DUP3 PUSH2 0x673 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x573 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B9 DUP2 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0xC16 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5E4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x602 JUMPI PUSH2 0x601 PUSH2 0xC16 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x612 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x630 JUMPI PUSH2 0x62F PUSH2 0xC16 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x640 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x53A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x658 DUP2 PUSH2 0xC7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66D DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x682 DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69E PUSH2 0xC25 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6BD JUMPI PUSH2 0x6BC PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH2 0x6C9 DUP6 DUP3 DUP7 ADD PUSH2 0x5BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6EA JUMPI PUSH2 0x6E9 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH2 0x6F6 DUP6 DUP3 DUP7 ADD PUSH2 0x5ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0xC25 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x737 JUMPI PUSH2 0x736 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH2 0x743 DUP7 DUP3 DUP8 ADD PUSH2 0x5BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x754 DUP7 DUP3 DUP8 ADD PUSH2 0x649 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x765 DUP7 DUP3 DUP8 ADD PUSH2 0x5AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH2 0x784 PUSH2 0xC25 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x7A2 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH2 0x7AF DUP5 DUP3 DUP6 ADD PUSH2 0x61B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C4 DUP4 DUP4 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D9 DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7E8 DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F9 DUP3 PUSH2 0x977 JUMP JUMPDEST PUSH2 0x803 DUP2 DUP6 PUSH2 0x98F JUMP JUMPDEST SWAP4 POP PUSH2 0x80E DUP4 PUSH2 0x967 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83F JUMPI DUP2 MLOAD PUSH2 0x826 DUP9 DUP3 PUSH2 0x7B8 JUMP JUMPDEST SWAP8 POP PUSH2 0x831 DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x812 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x859 PUSH1 0xE DUP4 PUSH2 0x9A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x864 DUP3 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x878 DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x897 DUP2 PUSH2 0x84C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x8B3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x86F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x8C5 DUP2 DUP7 PUSH2 0x7EE JUMP JUMPDEST SWAP1 POP PUSH2 0x8D4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x8E1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x86F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 PUSH2 0x905 JUMP JUMPDEST SWAP1 POP PUSH2 0x900 DUP3 DUP3 PUSH2 0xAE0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x92A JUMPI PUSH2 0x929 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x956 JUMPI PUSH2 0x955 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BC DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C7 DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9FC JUMPI PUSH2 0x9FB PUSH2 0xB5A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA1D DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA2D JUMPI PUSH2 0xA2C PUSH2 0xB89 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA43 DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4E DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA86 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9D DUP3 PUSH2 0xAB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAF DUP3 PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE9 DUP3 PUSH2 0xC2A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB08 JUMPI PUSH2 0xB07 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1C DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4E PUSH2 0xB5A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6174696321000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP2 EQ PUSH2 0xC78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0xAA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC9B DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP2 EQ PUSH2 0xCA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 MSTORE8 0xD3 SWAP14 0xB4 ADD 0xCB 0xE 0x2A 0x21 SWAP1 PUSH14 0x7B3FA3DFE1A55151E062CE620C40 MSIZE PUSH4 0xA10FDCE1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "232:1164:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;337:185;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;524:869;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;337:185;456:7;447:6;:16;;;;;;;;;;;;:::i;:::-;;478:7;469:6;;:16;;;;;;;;;;;;;;;;;;506:13;491:12;;:28;;;;;;;;;;;;;;;;;;337:185;;;:::o;524:869::-;610:16;629:7;:14;610:33;;667:1;657:9;:11;649:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;696:6;692:377;708:11;706:1;:13;692:377;;;736:21;774:1;760:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;736:40;;808:12;;;;;;;;;;;790:4;795:1;790:7;;;;;;;;:::i;:::-;;;;;;;:31;;;;;;;;;;;853:7;861:1;853:10;;;;;;;;:::i;:::-;;;;;;;;835:4;840:1;835:7;;;;;;;;:::i;:::-;;;;;;;:29;;;;;;;;;;;878:14;913:5;906:2;909:1;906:5;;;;;;;;:::i;:::-;;;;;;;;895:9;:17;;;;:::i;:::-;:23;;;;:::i;:::-;878:40;;940:6;;;;;;;;;;986;;;;;;;;;;;:28;;;1015:9;1026:4;1032:10;1060:4;1044:15;:20;;;;:::i;:::-;986:79;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;725:344;;721:3;;;;;:::i;:::-;;;;692:377;;;;603:790;524:869;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:6:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1514:744::-;1621:5;1646:81;1662:64;1719:6;1662:64;:::i;:::-;1646:81;:::i;:::-;1637:90;;1747:5;1776:6;1769:5;1762:21;1810:4;1803:5;1799:16;1792:23;;1836:6;1886:3;1878:4;1870:6;1866:17;1861:3;1857:27;1854:36;1851:143;;;1905:79;;:::i;:::-;1851:143;2018:1;2003:249;2028:6;2025:1;2022:13;2003:249;;;2096:3;2125:48;2169:3;2157:10;2125:48;:::i;:::-;2120:3;2113:61;2203:4;2198:3;2194:14;2187:21;;2237:4;2232:3;2228:14;2221:21;;2063:189;2050:1;2047;2043:9;2038:14;;2003:249;;;2007:14;1627:631;;1514:744;;;;;:::o;2264:139::-;2310:5;2348:6;2335:20;2326:29;;2364:33;2391:5;2364:33;:::i;:::-;2264:139;;;;:::o;2426:370::-;2497:5;2546:3;2539:4;2531:6;2527:17;2523:27;2513:122;;2554:79;;:::i;:::-;2513:122;2671:6;2658:20;2696:94;2786:3;2778:6;2771:4;2763:6;2759:17;2696:94;:::i;:::-;2687:103;;2503:293;2426:370;;;;:::o;2819:::-;2890:5;2939:3;2932:4;2924:6;2920:17;2916:27;2906:122;;2947:79;;:::i;:::-;2906:122;3064:6;3051:20;3089:94;3179:3;3171:6;3164:4;3156:6;3152:17;3089:94;:::i;:::-;3080:103;;2896:293;2819:370;;;;:::o;3212:385::-;3294:5;3343:3;3336:4;3328:6;3324:17;3320:27;3310:122;;3351:79;;:::i;:::-;3310:122;3461:6;3455:13;3486:105;3587:3;3579:6;3572:4;3564:6;3560:17;3486:105;:::i;:::-;3477:114;;3300:297;3212:385;;;;:::o;3603:191::-;3675:5;3713:6;3700:20;3691:29;;3729:59;3782:5;3729:59;:::i;:::-;3603:191;;;;:::o;3800:139::-;3846:5;3884:6;3871:20;3862:29;;3900:33;3927:5;3900:33;:::i;:::-;3800:139;;;;:::o;3945:143::-;4002:5;4033:6;4027:13;4018:22;;4049:33;4076:5;4049:33;:::i;:::-;3945:143;;;;:::o;4094:894::-;4212:6;4220;4269:2;4257:9;4248:7;4244:23;4240:32;4237:119;;;4275:79;;:::i;:::-;4237:119;4423:1;4412:9;4408:17;4395:31;4453:18;4445:6;4442:30;4439:117;;;4475:79;;:::i;:::-;4439:117;4580:78;4650:7;4641:6;4630:9;4626:22;4580:78;:::i;:::-;4570:88;;4366:302;4735:2;4724:9;4720:18;4707:32;4766:18;4758:6;4755:30;4752:117;;;4788:79;;:::i;:::-;4752:117;4893:78;4963:7;4954:6;4943:9;4939:22;4893:78;:::i;:::-;4883:88;;4678:303;4094:894;;;;;:::o;4994:881::-;5122:6;5130;5138;5187:2;5175:9;5166:7;5162:23;5158:32;5155:119;;;5193:79;;:::i;:::-;5155:119;5341:1;5330:9;5326:17;5313:31;5371:18;5363:6;5360:30;5357:117;;;5393:79;;:::i;:::-;5357:117;5498:78;5568:7;5559:6;5548:9;5544:22;5498:78;:::i;:::-;5488:88;;5284:302;5625:2;5651:79;5722:7;5713:6;5702:9;5698:22;5651:79;:::i;:::-;5641:89;;5596:144;5779:2;5805:53;5850:7;5841:6;5830:9;5826:22;5805:53;:::i;:::-;5795:63;;5750:118;4994:881;;;;;:::o;5881:554::-;5976:6;6025:2;6013:9;6004:7;6000:23;5996:32;5993:119;;;6031:79;;:::i;:::-;5993:119;6172:1;6161:9;6157:17;6151:24;6202:18;6194:6;6191:30;6188:117;;;6224:79;;:::i;:::-;6188:117;6329:89;6410:7;6401:6;6390:9;6386:22;6329:89;:::i;:::-;6319:99;;6122:306;5881:554;;;;:::o;6441:179::-;6510:10;6531:46;6573:3;6565:6;6531:46;:::i;:::-;6609:4;6604:3;6600:14;6586:28;;6441:179;;;;:::o;6626:108::-;6703:24;6721:5;6703:24;:::i;:::-;6698:3;6691:37;6626:108;;:::o;6740:118::-;6827:24;6845:5;6827:24;:::i;:::-;6822:3;6815:37;6740:118;;:::o;6894:732::-;7013:3;7042:54;7090:5;7042:54;:::i;:::-;7112:86;7191:6;7186:3;7112:86;:::i;:::-;7105:93;;7222:56;7272:5;7222:56;:::i;:::-;7301:7;7332:1;7317:284;7342:6;7339:1;7336:13;7317:284;;;7418:6;7412:13;7445:63;7504:3;7489:13;7445:63;:::i;:::-;7438:70;;7531:60;7584:6;7531:60;:::i;:::-;7521:70;;7377:224;7364:1;7361;7357:9;7352:14;;7317:284;;;7321:14;7617:3;7610:10;;7018:608;;;6894:732;;;;:::o;7632:366::-;7774:3;7795:67;7859:2;7854:3;7795:67;:::i;:::-;7788:74;;7871:93;7960:3;7871:93;:::i;:::-;7989:2;7984:3;7980:12;7973:19;;7632:366;;;:::o;8004:118::-;8091:24;8109:5;8091:24;:::i;:::-;8086:3;8079:37;8004:118;;:::o;8128:419::-;8294:4;8332:2;8321:9;8317:18;8309:26;;8381:9;8375:4;8371:20;8367:1;8356:9;8352:17;8345:47;8409:131;8535:4;8409:131;:::i;:::-;8401:139;;8128:419;;;:::o;8553:704::-;8780:4;8818:3;8807:9;8803:19;8795:27;;8832:71;8900:1;8889:9;8885:17;8876:6;8832:71;:::i;:::-;8950:9;8944:4;8940:20;8935:2;8924:9;8920:18;8913:48;8978:108;9081:4;9072:6;8978:108;:::i;:::-;8970:116;;9096:72;9164:2;9153:9;9149:18;9140:6;9096:72;:::i;:::-;9178;9246:2;9235:9;9231:18;9222:6;9178:72;:::i;:::-;8553:704;;;;;;;:::o;9263:129::-;9297:6;9324:20;;:::i;:::-;9314:30;;9353:33;9381:4;9373:6;9353:33;:::i;:::-;9263:129;;;:::o;9398:75::-;9431:6;9464:2;9458:9;9448:19;;9398:75;:::o;9479:311::-;9556:4;9646:18;9638:6;9635:30;9632:56;;;9668:18;;:::i;:::-;9632:56;9718:4;9710:6;9706:17;9698:25;;9778:4;9772;9768:15;9760:23;;9479:311;;;:::o;9796:::-;9873:4;9963:18;9955:6;9952:30;9949:56;;;9985:18;;:::i;:::-;9949:56;10035:4;10027:6;10023:17;10015:25;;10095:4;10089;10085:15;10077:23;;9796:311;;;:::o;10113:132::-;10180:4;10203:3;10195:11;;10233:4;10228:3;10224:14;10216:22;;10113:132;;;:::o;10251:114::-;10318:6;10352:5;10346:12;10336:22;;10251:114;;;:::o;10371:113::-;10441:4;10473;10468:3;10464:14;10456:22;;10371:113;;;:::o;10490:184::-;10589:11;10623:6;10618:3;10611:19;10663:4;10658:3;10654:14;10639:29;;10490:184;;;;:::o;10680:169::-;10764:11;10798:6;10793:3;10786:19;10838:4;10833:3;10829:14;10814:29;;10680:169;;;;:::o;10855:305::-;10895:3;10914:20;10932:1;10914:20;:::i;:::-;10909:25;;10948:20;10966:1;10948:20;:::i;:::-;10943:25;;11102:1;11034:66;11030:74;11027:1;11024:81;11021:107;;;11108:18;;:::i;:::-;11021:107;11152:1;11149;11145:9;11138:16;;10855:305;;;;:::o;11166:185::-;11206:1;11223:20;11241:1;11223:20;:::i;:::-;11218:25;;11257:20;11275:1;11257:20;:::i;:::-;11252:25;;11296:1;11286:35;;11301:18;;:::i;:::-;11286:35;11343:1;11340;11336:9;11331:14;;11166:185;;;;:::o;11357:348::-;11397:7;11420:20;11438:1;11420:20;:::i;:::-;11415:25;;11454:20;11472:1;11454:20;:::i;:::-;11449:25;;11642:1;11574:66;11570:74;11567:1;11564:81;11559:1;11552:9;11545:17;11541:105;11538:131;;;11649:18;;:::i;:::-;11538:131;11697:1;11694;11690:9;11679:20;;11357:348;;;;:::o;11711:96::-;11748:7;11777:24;11795:5;11777:24;:::i;:::-;11766:35;;11711:96;;;:::o;11813:122::-;11876:7;11905:24;11923:5;11905:24;:::i;:::-;11894:35;;11813:122;;;:::o;11941:126::-;11978:7;12018:42;12011:5;12007:54;11996:65;;11941:126;;;:::o;12073:77::-;12110:7;12139:5;12128:16;;12073:77;;;:::o;12156:281::-;12239:27;12261:4;12239:27;:::i;:::-;12231:6;12227:40;12369:6;12357:10;12354:22;12333:18;12321:10;12318:34;12315:62;12312:88;;;12380:18;;:::i;:::-;12312:88;12420:10;12416:2;12409:22;12199:238;12156:281;;:::o;12443:233::-;12482:3;12505:24;12523:5;12505:24;:::i;:::-;12496:33;;12551:66;12544:5;12541:77;12538:103;;;12621:18;;:::i;:::-;12538:103;12668:1;12661:5;12657:13;12650:20;;12443:233;;;:::o;12682:180::-;12730:77;12727:1;12720:88;12827:4;12824:1;12817:15;12851:4;12848:1;12841:15;12868:180;12916:77;12913:1;12906:88;13013:4;13010:1;13003:15;13037:4;13034:1;13027:15;13054:180;13102:77;13099:1;13092:88;13199:4;13196:1;13189:15;13223:4;13220:1;13213:15;13240:180;13288:77;13285:1;13278:88;13385:4;13382:1;13375:15;13409:4;13406:1;13399:15;13426:117;13535:1;13532;13525:12;13549:117;13658:1;13655;13648:12;13672:117;13781:1;13778;13771:12;13795:117;13904:1;13901;13894:12;13918:102;13959:6;14010:2;14006:7;14001:2;13994:5;13990:14;13986:28;13976:38;;13918:102;;;:::o;14026:164::-;14166:16;14162:1;14154:6;14150:14;14143:40;14026:164;:::o;14196:122::-;14269:24;14287:5;14269:24;:::i;:::-;14262:5;14259:35;14249:63;;14308:1;14305;14298:12;14249:63;14196:122;:::o;14324:174::-;14423:50;14467:5;14423:50;:::i;:::-;14416:5;14413:61;14403:89;;14488:1;14485;14478:12;14403:89;14324:174;:::o;14504:122::-;14577:24;14595:5;14577:24;:::i;:::-;14570:5;14567:35;14557:63;;14616:1;14613;14606:12;14557:63;14504:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "659000",
								"executionCost": "689",
								"totalCost": "659689"
							},
							"external": {
								"initialize(address[],address,address)": "infinite",
								"swapAndPay(address[],uint256[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 1396,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 1396,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c353d39db401cb0e2a21906d7b3fa3dfe1a55151e062ce620c405963a10fdce164736f6c63430008070033",
									".code": [
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH",
											"source": 3,
											"value": "90482D72"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH",
											"source": 3,
											"value": "9728D85F"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 232,
											"end": 1396,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 447,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 447,
											"end": 463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 447,
											"end": 463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 447,
											"end": 463,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 463,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 447,
											"end": 463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 447,
											"end": 463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 478,
											"end": 485,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 469,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 485,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 469,
											"end": 485,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 485,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 485,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 469,
											"end": 485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 506,
											"end": 519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 491,
											"end": 503,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 519,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 491,
											"end": 519,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 491,
											"end": 519,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 491,
											"end": 519,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 337,
											"end": 522,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 610,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 629,
											"end": 643,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 610,
											"end": 643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 610,
											"end": 643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 667,
											"end": 668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 666,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 657,
											"end": 668,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 649,
											"end": 686,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 649,
											"end": 686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 708,
											"end": 719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 719,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 736,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 775,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 760,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 760,
											"end": 776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 736,
											"end": 776,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 736,
											"end": 776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 790,
											"end": 794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 795,
											"end": 796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 790,
											"end": 797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 790,
											"end": 797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 790,
											"end": 797,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 790,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 790,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 790,
											"end": 797,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 790,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 790,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 790,
											"end": 797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 790,
											"end": 821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 790,
											"end": 821,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 790,
											"end": 821,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 790,
											"end": 821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 790,
											"end": 821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 790,
											"end": 821,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 790,
											"end": 821,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 790,
											"end": 821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 790,
											"end": 821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 790,
											"end": 821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 790,
											"end": 821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 861,
											"end": 862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 835,
											"end": 839,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 835,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 835,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 835,
											"end": 864,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 835,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 835,
											"end": 864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 835,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 835,
											"end": 864,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 835,
											"end": 864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 835,
											"end": 864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 835,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 835,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 878,
											"end": 892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 918,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 906,
											"end": 908,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 904,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 895,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 895,
											"end": 912,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 895,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 895,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 895,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 895,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 878,
											"end": 918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 878,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 940,
											"end": 946,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 940,
											"end": 946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 940,
											"end": 946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 940,
											"end": 946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 940,
											"end": 946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1014,
											"name": "PUSH",
											"source": 3,
											"value": "7FF36AB5"
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1026,
											"end": 1030,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1042,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1064,
											"name": "PUSH",
											"source": 3,
											"value": "E10"
										},
										{
											"begin": 1044,
											"end": 1059,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1044,
											"end": 1064,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1064,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 725,
											"end": 1069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 725,
											"end": 1069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 721,
											"end": 724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 721,
											"end": 724,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 724,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 721,
											"end": 724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 721,
											"end": 724,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 692,
											"end": 1069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 603,
											"end": 1393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 1393,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "56"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "57"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "56"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "57"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1514,
											"end": 2258,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1514,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1662,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1662,
											"end": 1726,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1662,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1646,
											"end": 1727,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1646,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1752,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1762,
											"end": 1783,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 1815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 1889,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1883,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1890,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1851,
											"end": 1994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1905,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1905,
											"end": 1984,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1905,
											"end": 1984,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1905,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1851,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2252,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2003,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2252,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2003,
											"end": 2252,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2125,
											"end": 2173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2125,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2125,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2208,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2241,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2047,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2003,
											"end": 2252,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2252,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2003,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 2258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 2258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2258,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2258,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2258,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2264,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2264,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2355,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2391,
											"end": 2396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2403,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2426,
											"end": 2796,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2426,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2543,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2513,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2513,
											"end": 2635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2554,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2554,
											"end": 2633,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2554,
											"end": 2633,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2554,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2513,
											"end": 2635,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2513,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2786,
											"end": 2789,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2696,
											"end": 2790,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2696,
											"end": 2790,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2696,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2796,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2796,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2819,
											"end": 3189,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2819,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2936,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2924,
											"end": 2930,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2906,
											"end": 3028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2947,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2947,
											"end": 3026,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 3026,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2947,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3028,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2906,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3179,
											"end": 3182,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3089,
											"end": 3183,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3183,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3089,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 3189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3189,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3189,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3189,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3212,
											"end": 3597,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3212,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3346,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3340,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3328,
											"end": 3334,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3324,
											"end": 3341,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3347,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3310,
											"end": 3432,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3351,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3351,
											"end": 3430,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3430,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3351,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3432,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3310,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3467,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3468,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3486,
											"end": 3591,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3486,
											"end": 3591,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3486,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3597,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3597,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3597,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3603,
											"end": 3794,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3603,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3719,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3720,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 3720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 3720,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3782,
											"end": 3787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3729,
											"end": 3788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3788,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3729,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3794,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3794,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3794,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3800,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3800,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3891,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3927,
											"end": 3932,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3900,
											"end": 3933,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3900,
											"end": 3933,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3900,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3939,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3939,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3945,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3945,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4040,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4076,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4049,
											"end": 4082,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4082,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4049,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 4088,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 4088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 4088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 4088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 4088,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4094,
											"end": 4988,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4094,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4271,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4266,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4267,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4272,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4237,
											"end": 4356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4275,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4275,
											"end": 4354,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4275,
											"end": 4354,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4275,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4356,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4237,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4426,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4445,
											"end": 4451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4439,
											"end": 4556,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4439,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4439,
											"end": 4556,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4475,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4475,
											"end": 4554,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4475,
											"end": 4554,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4475,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4439,
											"end": 4556,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4439,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4650,
											"end": 4657,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4639,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4626,
											"end": 4648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4580,
											"end": 4658,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4580,
											"end": 4658,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4580,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4658,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4737,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4724,
											"end": 4733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 4739,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4758,
											"end": 4764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4755,
											"end": 4785,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4869,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4752,
											"end": 4869,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4788,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4788,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4788,
											"end": 4867,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4788,
											"end": 4867,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4788,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4869,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4752,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4963,
											"end": 4970,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4954,
											"end": 4960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4952,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4893,
											"end": 4971,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4893,
											"end": 4971,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4893,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4883,
											"end": 4971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4883,
											"end": 4971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4988,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4988,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4988,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4994,
											"end": 5875,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4994,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5122,
											"end": 5128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5136,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5175,
											"end": 5184,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5173,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5185,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5190,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5155,
											"end": 5274,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5155,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5155,
											"end": 5274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5193,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5193,
											"end": 5272,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5193,
											"end": 5272,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5193,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5155,
											"end": 5274,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5155,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5344,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5371,
											"end": 5389,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5363,
											"end": 5369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5474,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5357,
											"end": 5474,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5393,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5393,
											"end": 5472,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5393,
											"end": 5472,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5393,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5474,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5357,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5568,
											"end": 5575,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5557,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5498,
											"end": 5576,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5498,
											"end": 5576,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5498,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5576,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5651,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5722,
											"end": 5729,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5719,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5702,
											"end": 5711,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5698,
											"end": 5720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5651,
											"end": 5730,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5651,
											"end": 5730,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5651,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5730,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5779,
											"end": 5781,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5805,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5850,
											"end": 5857,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5841,
											"end": 5847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5839,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5826,
											"end": 5848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5805,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5805,
											"end": 5858,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5805,
											"end": 5858,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5805,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5795,
											"end": 5858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5795,
											"end": 5858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5875,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5875,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5875,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5875,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5881,
											"end": 6435,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5881,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 5982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6004,
											"end": 6011,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6023,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 6028,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6112,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5993,
											"end": 6112,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6031,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6031,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6031,
											"end": 6110,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6110,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6031,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6112,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5993,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6175,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6221,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6188,
											"end": 6305,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6188,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6188,
											"end": 6305,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6224,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 6224,
											"end": 6303,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6224,
											"end": 6303,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6224,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6188,
											"end": 6305,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6188,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6399,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6329,
											"end": 6418,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6329,
											"end": 6418,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6329,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6319,
											"end": 6418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6319,
											"end": 6418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6122,
											"end": 6428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 6435,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 6435,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 6435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 6435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 6435,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6441,
											"end": 6620,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6441,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6573,
											"end": 6576,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6531,
											"end": 6577,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6531,
											"end": 6577,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6531,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6613,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 6607,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6620,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6620,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6620,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6626,
											"end": 6734,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6626,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6721,
											"end": 6726,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 6703,
											"end": 6727,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6703,
											"end": 6727,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6703,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6626,
											"end": 6734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6626,
											"end": 6734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6626,
											"end": 6734,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6740,
											"end": 6858,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6740,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6845,
											"end": 6850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 6827,
											"end": 6851,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6827,
											"end": 6851,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6827,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6822,
											"end": 6825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6815,
											"end": 6852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6858,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6894,
											"end": 7626,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6894,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7042,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 7090,
											"end": 7095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7042,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 7042,
											"end": 7096,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7042,
											"end": 7096,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 7042,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7112,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7191,
											"end": 7197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7186,
											"end": 7189,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7112,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7112,
											"end": 7198,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7112,
											"end": 7198,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7112,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7198,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7272,
											"end": 7277,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 7222,
											"end": 7278,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7222,
											"end": 7278,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7222,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7301,
											"end": 7308,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7332,
											"end": 7333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7601,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7317,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7601,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7317,
											"end": 7601,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7425,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7504,
											"end": 7507,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7508,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7531,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7584,
											"end": 7590,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7531,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7531,
											"end": 7591,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7531,
											"end": 7591,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7531,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7591,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7357,
											"end": 7366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7352,
											"end": 7366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7352,
											"end": 7366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7317,
											"end": 7601,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7601,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7317,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7617,
											"end": 7620,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7620,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 7626,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 7626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 7626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 7626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 7626,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7632,
											"end": 7998,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7632,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7795,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7859,
											"end": 7861,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 7854,
											"end": 7857,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7795,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7795,
											"end": 7862,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7795,
											"end": 7862,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7795,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7960,
											"end": 7963,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7871,
											"end": 7964,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7871,
											"end": 7964,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7871,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7984,
											"end": 7987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7980,
											"end": 7992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 7992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 7992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7998,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8004,
											"end": 8122,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8004,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8109,
											"end": 8114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 8091,
											"end": 8115,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8091,
											"end": 8115,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8091,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8004,
											"end": 8122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8004,
											"end": 8122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8004,
											"end": 8122,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8334,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8321,
											"end": 8330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8375,
											"end": 8379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8365,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8352,
											"end": 8369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8345,
											"end": 8392,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8409,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8409,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 8409,
											"end": 8540,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8409,
											"end": 8540,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8409,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8780,
											"end": 8784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8821,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8807,
											"end": 8816,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8795,
											"end": 8822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8795,
											"end": 8822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8900,
											"end": 8901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8889,
											"end": 8898,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8885,
											"end": 8902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8876,
											"end": 8882,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8832,
											"end": 8903,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8832,
											"end": 8903,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8832,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8950,
											"end": 8959,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8944,
											"end": 8948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8940,
											"end": 8960,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8924,
											"end": 8933,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8920,
											"end": 8938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8913,
											"end": 8961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8978,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9081,
											"end": 9085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9072,
											"end": 9078,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8978,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8978,
											"end": 9086,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8978,
											"end": 9086,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8978,
											"end": 9086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9164,
											"end": 9166,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9153,
											"end": 9162,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9149,
											"end": 9167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9140,
											"end": 9146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9096,
											"end": 9168,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9096,
											"end": 9168,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9096,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9235,
											"end": 9244,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9222,
											"end": 9228,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9178,
											"end": 9250,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9178,
											"end": 9250,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9178,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 9257,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9263,
											"end": 9392,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9263,
											"end": 9392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9314,
											"end": 9344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9314,
											"end": 9344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9381,
											"end": 9385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9373,
											"end": 9379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9353,
											"end": 9386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9353,
											"end": 9386,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9353,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9392,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9398,
											"end": 9473,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9398,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9431,
											"end": 9437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9458,
											"end": 9467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9448,
											"end": 9467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9448,
											"end": 9467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9398,
											"end": 9473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9398,
											"end": 9473,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9479,
											"end": 9790,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 9479,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9638,
											"end": 9644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9635,
											"end": 9665,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9632,
											"end": 9688,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9632,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9632,
											"end": 9688,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9668,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 9668,
											"end": 9686,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9668,
											"end": 9686,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9668,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9632,
											"end": 9688,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9632,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9718,
											"end": 9722,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9710,
											"end": 9716,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9706,
											"end": 9723,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9778,
											"end": 9782,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 9783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9760,
											"end": 9783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9760,
											"end": 9783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9790,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9796,
											"end": 10107,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 9796,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9873,
											"end": 9877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9955,
											"end": 9961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9982,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 10005,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9949,
											"end": 10005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 10005,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9949,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10039,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10027,
											"end": 10033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10023,
											"end": 10040,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10095,
											"end": 10099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10089,
											"end": 10093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10100,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10077,
											"end": 10100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10077,
											"end": 10100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 10107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 10107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 10107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 10107,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10113,
											"end": 10245,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 10113,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10180,
											"end": 10184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10237,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10228,
											"end": 10231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10224,
											"end": 10238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10245,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10251,
											"end": 10365,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 10251,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10318,
											"end": 10324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10346,
											"end": 10358,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10336,
											"end": 10358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10336,
											"end": 10358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10251,
											"end": 10365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10251,
											"end": 10365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10251,
											"end": 10365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10251,
											"end": 10365,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10371,
											"end": 10484,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 10371,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10477,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10468,
											"end": 10471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10464,
											"end": 10478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10456,
											"end": 10478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10456,
											"end": 10478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10484,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10484,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10490,
											"end": 10674,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 10490,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10589,
											"end": 10600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10623,
											"end": 10629,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10618,
											"end": 10621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10611,
											"end": 10630,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10663,
											"end": 10667,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10639,
											"end": 10668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10639,
											"end": 10668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10490,
											"end": 10674,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10490,
											"end": 10674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10490,
											"end": 10674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10490,
											"end": 10674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10490,
											"end": 10674,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10680,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10680,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10764,
											"end": 10775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10793,
											"end": 10796,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10786,
											"end": 10805,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10838,
											"end": 10842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10833,
											"end": 10836,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10829,
											"end": 10843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10849,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10849,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10855,
											"end": 11160,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 10855,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10914,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 10932,
											"end": 10933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10914,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 10914,
											"end": 10934,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10914,
											"end": 10934,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 10914,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10909,
											"end": 10934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10909,
											"end": 10934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10948,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 10966,
											"end": 10967,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10948,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 10948,
											"end": 10968,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10948,
											"end": 10968,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 10948,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11102,
											"end": 11103,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11034,
											"end": 11100,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11030,
											"end": 11104,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11027,
											"end": 11028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11024,
											"end": 11105,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11021,
											"end": 11128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11021,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 11021,
											"end": 11128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11021,
											"end": 11128,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 11021,
											"end": 11128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11152,
											"end": 11153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11145,
											"end": 11154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 11160,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 11160,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 11160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 11160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 11160,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11166,
											"end": 11351,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 11166,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11206,
											"end": 11207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11223,
											"end": 11243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 11241,
											"end": 11242,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11223,
											"end": 11243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 11223,
											"end": 11243,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11223,
											"end": 11243,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 11223,
											"end": 11243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11218,
											"end": 11243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11218,
											"end": 11243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11257,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 11275,
											"end": 11276,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11257,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 11257,
											"end": 11277,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11257,
											"end": 11277,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 11257,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11252,
											"end": 11277,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11252,
											"end": 11277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11296,
											"end": 11297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11286,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 11286,
											"end": 11321,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11301,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 11301,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 11301,
											"end": 11319,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11301,
											"end": 11319,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 11301,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11286,
											"end": 11321,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 11286,
											"end": 11321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11343,
											"end": 11344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11340,
											"end": 11341,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11331,
											"end": 11345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11331,
											"end": 11345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11166,
											"end": 11351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11166,
											"end": 11351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11166,
											"end": 11351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11166,
											"end": 11351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11166,
											"end": 11351,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11357,
											"end": 11705,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 11357,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11397,
											"end": 11404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11420,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11438,
											"end": 11439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11420,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 11420,
											"end": 11440,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11420,
											"end": 11440,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11420,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11454,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11472,
											"end": 11473,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11454,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 11454,
											"end": 11474,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11454,
											"end": 11474,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11454,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11449,
											"end": 11474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11449,
											"end": 11474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11643,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11574,
											"end": 11640,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11570,
											"end": 11644,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11567,
											"end": 11568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11564,
											"end": 11645,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11552,
											"end": 11561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11545,
											"end": 11562,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11541,
											"end": 11646,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11538,
											"end": 11669,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11538,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 11538,
											"end": 11669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11538,
											"end": 11669,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 11538,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11697,
											"end": 11698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11694,
											"end": 11695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11690,
											"end": 11699,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11679,
											"end": 11699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11679,
											"end": 11699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11705,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11705,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11711,
											"end": 11807,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 11711,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11748,
											"end": 11755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11795,
											"end": 11800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11777,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 11777,
											"end": 11801,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11777,
											"end": 11801,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11777,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11766,
											"end": 11801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11766,
											"end": 11801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11711,
											"end": 11807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11711,
											"end": 11807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11711,
											"end": 11807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11711,
											"end": 11807,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11813,
											"end": 11935,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 11813,
											"end": 11935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11876,
											"end": 11883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11905,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11923,
											"end": 11928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11905,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 11905,
											"end": 11929,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11905,
											"end": 11929,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11905,
											"end": 11929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11894,
											"end": 11929,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11894,
											"end": 11929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11813,
											"end": 11935,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11813,
											"end": 11935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11813,
											"end": 11935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11813,
											"end": 11935,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11941,
											"end": 12067,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 11941,
											"end": 12067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11978,
											"end": 11985,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12018,
											"end": 12060,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12011,
											"end": 12016,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12007,
											"end": 12061,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11996,
											"end": 12061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11996,
											"end": 12061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11941,
											"end": 12067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11941,
											"end": 12067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11941,
											"end": 12067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11941,
											"end": 12067,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12073,
											"end": 12150,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 12073,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12110,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12139,
											"end": 12144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12128,
											"end": 12144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12128,
											"end": 12144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12073,
											"end": 12150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12073,
											"end": 12150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12073,
											"end": 12150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12073,
											"end": 12150,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12156,
											"end": 12437,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 12156,
											"end": 12437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 12261,
											"end": 12265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 12239,
											"end": 12266,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12239,
											"end": 12266,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 12239,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12231,
											"end": 12237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12227,
											"end": 12267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12357,
											"end": 12367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12354,
											"end": 12376,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12321,
											"end": 12331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12318,
											"end": 12352,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12315,
											"end": 12377,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12312,
											"end": 12400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12312,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 12312,
											"end": 12400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12380,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 12380,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 12380,
											"end": 12398,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12380,
											"end": 12398,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 12380,
											"end": 12398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12312,
											"end": 12400,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 12312,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12420,
											"end": 12430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12416,
											"end": 12418,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12409,
											"end": 12431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12199,
											"end": 12437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12437,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12443,
											"end": 12676,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 12443,
											"end": 12676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12482,
											"end": 12485,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12505,
											"end": 12529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 12523,
											"end": 12528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12505,
											"end": 12529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 12505,
											"end": 12529,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12505,
											"end": 12529,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 12505,
											"end": 12529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12496,
											"end": 12529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12496,
											"end": 12529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12551,
											"end": 12617,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12544,
											"end": 12549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12541,
											"end": 12618,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12538,
											"end": 12641,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12538,
											"end": 12641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 12538,
											"end": 12641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12621,
											"end": 12639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 12621,
											"end": 12639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 12621,
											"end": 12639,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12621,
											"end": 12639,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 12621,
											"end": 12639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12538,
											"end": 12641,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 12538,
											"end": 12641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12668,
											"end": 12669,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12661,
											"end": 12666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12657,
											"end": 12670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12650,
											"end": 12670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12650,
											"end": 12670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12443,
											"end": 12676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12443,
											"end": 12676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12443,
											"end": 12676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12443,
											"end": 12676,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12682,
											"end": 12862,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 12682,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12730,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12727,
											"end": 12728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12808,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12831,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 12824,
											"end": 12825,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12817,
											"end": 12832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12851,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12848,
											"end": 12849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12841,
											"end": 12856,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12868,
											"end": 13048,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 12868,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12993,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12913,
											"end": 12914,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13013,
											"end": 13017,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 13010,
											"end": 13011,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13003,
											"end": 13018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13037,
											"end": 13041,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13034,
											"end": 13035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13027,
											"end": 13042,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13054,
											"end": 13234,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 13054,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13102,
											"end": 13179,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13099,
											"end": 13100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13092,
											"end": 13180,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 13196,
											"end": 13197,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13189,
											"end": 13204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13223,
											"end": 13227,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13220,
											"end": 13221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13213,
											"end": 13228,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13240,
											"end": 13420,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 13240,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13288,
											"end": 13365,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13285,
											"end": 13286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13278,
											"end": 13366,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13385,
											"end": 13389,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 13382,
											"end": 13383,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13375,
											"end": 13390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13409,
											"end": 13413,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13406,
											"end": 13407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13399,
											"end": 13414,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13426,
											"end": 13543,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 13426,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13535,
											"end": 13536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13533,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13525,
											"end": 13537,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13549,
											"end": 13666,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 13549,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13658,
											"end": 13659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13655,
											"end": 13656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13648,
											"end": 13660,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13672,
											"end": 13789,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 13672,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13781,
											"end": 13782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13778,
											"end": 13779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13783,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13795,
											"end": 13912,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 13795,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13904,
											"end": 13905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 13902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13894,
											"end": 13906,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13918,
											"end": 14020,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 13918,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13959,
											"end": 13965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14010,
											"end": 14012,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 14006,
											"end": 14013,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 14001,
											"end": 14003,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13994,
											"end": 13999,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13990,
											"end": 14004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13986,
											"end": 14014,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13976,
											"end": 14014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13976,
											"end": 14014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13918,
											"end": 14020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13918,
											"end": 14020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13918,
											"end": 14020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13918,
											"end": 14020,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14026,
											"end": 14190,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 14026,
											"end": 14190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14166,
											"end": 14182,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C6964204D6174696321000000000000000000000000000000000000"
										},
										{
											"begin": 14162,
											"end": 14163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14154,
											"end": 14160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14150,
											"end": 14164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14143,
											"end": 14183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14026,
											"end": 14190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14026,
											"end": 14190,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14196,
											"end": 14318,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 14196,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14269,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 14287,
											"end": 14292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14269,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 14269,
											"end": 14293,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14269,
											"end": 14293,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 14269,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14262,
											"end": 14267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14259,
											"end": 14294,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14249,
											"end": 14312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 14249,
											"end": 14312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14308,
											"end": 14309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14305,
											"end": 14306,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14298,
											"end": 14310,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14249,
											"end": 14312,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 14249,
											"end": 14312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14196,
											"end": 14318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14196,
											"end": 14318,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14324,
											"end": 14498,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 14324,
											"end": 14498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14423,
											"end": 14473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 14467,
											"end": 14472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14423,
											"end": 14473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 14423,
											"end": 14473,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14423,
											"end": 14473,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 14423,
											"end": 14473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14416,
											"end": 14421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14413,
											"end": 14474,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14403,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 14403,
											"end": 14492,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14488,
											"end": 14489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14485,
											"end": 14486,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14478,
											"end": 14490,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14403,
											"end": 14492,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 14403,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14324,
											"end": 14498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14324,
											"end": 14498,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14504,
											"end": 14626,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 14504,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14577,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 14595,
											"end": 14600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14577,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 14577,
											"end": 14601,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14577,
											"end": 14601,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 14577,
											"end": 14601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14570,
											"end": 14575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14567,
											"end": 14602,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14557,
											"end": 14620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 14557,
											"end": 14620,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14616,
											"end": 14617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14613,
											"end": 14614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14606,
											"end": 14618,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14557,
											"end": 14620,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 14557,
											"end": 14620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14504,
											"end": 14626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14504,
											"end": 14626,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"initialize(address[],address,address)": "90482d72",
							"swapAndPay(address[],uint256[])": "9728d85f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrappedMatic\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"bp\",\"type\":\"uint256[]\"}],\"name\":\"swapAndPay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/defi.sol\":\"Cheddar\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x4823752b07b8ea4ca971b217e39457930e7cb103c2c91e2a29729e5ca907e4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f319af26a9ade3e6cf3698bf1b84aa6213bdd7a76606ea9ba56ced163593934\",\"dweb:/ipfs/QmZ2u9zen5Htan4dSP1RZCY2XqB9HUwqkNCMzdn7aV2jWc\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"contracts/defi.sol\":{\"keccak256\":\"0xfc41592a837dc087895829fec5d3a7e0b9550c18758506379d645f777ef7b352\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://97a4a81b4a49bda5b28b94bb705c2f89723e0cf4121c11c41f1e4b9cc36db4b6\",\"dweb:/ipfs/QmYA3s86ya3E5Abw57mTnt3wzKuhp5VSCRFJ8tV8uzKKNb\"]},\"contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0xd27c835b388d58b3008a791dfaccb168515fc3f9e517eac0e4997b798a21deaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98e76db484957f8d9b0523bcb51665466c3e1f719c89992e10fdb39214424299\",\"dweb:/ipfs/Qmb7ygbNaZiGEEs8Dgqt5LhG1B4u7uV4Cye3nAC3hZtQmX\"]},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x5e4804c8d46fde7223ce701c94945176b1bbd8cfd642aeb717c9bf5df54f83cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://539a1fd1ed4f784563d99acb60de2dd73b6a3e97a954233213401b18f4d8cadb\",\"dweb:/ipfs/QmPBrNpb478Tsh6jMbz83m9tnyhBASQMGaBR87JVtwX591\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "contracts/defi.sol:Cheddar",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 9,
								"contract": "contracts/defi.sol:Cheddar",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 456,
								"contract": "contracts/defi.sol:Cheddar",
								"label": "tokens",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 459,
								"contract": "contracts/defi.sol:Cheddar",
								"label": "router",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IUniswapV2Router02)982"
							},
							{
								"astId": 461,
								"contract": "contracts/defi.sol:Cheddar",
								"label": "wrappedMatic",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)982": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0xd27c835b388d58b3008a791dfaccb168515fc3f9e517eac0e4997b798a21deaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98e76db484957f8d9b0523bcb51665466c3e1f719c89992e10fdb39214424299\",\"dweb:/ipfs/Qmb7ygbNaZiGEEs8Dgqt5LhG1B4u7uV4Cye3nAC3hZtQmX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0xd27c835b388d58b3008a791dfaccb168515fc3f9e517eac0e4997b798a21deaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98e76db484957f8d9b0523bcb51665466c3e1f719c89992e10fdb39214424299\",\"dweb:/ipfs/Qmb7ygbNaZiGEEs8Dgqt5LhG1B4u7uV4Cye3nAC3hZtQmX\"]},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x5e4804c8d46fde7223ce701c94945176b1bbd8cfd642aeb717c9bf5df54f83cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://539a1fd1ed4f784563d99acb60de2dd73b6a3e97a954233213401b18f4d8cadb\",\"dweb:/ipfs/QmPBrNpb478Tsh6jMbz83m9tnyhBASQMGaBR87JVtwX591\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Address": [
							446
						],
						"Initializable": [
							73
						]
					},
					"id": 74,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 74,
							"sourceUnit": 447,
							"src": "138:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "173:1497:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\n initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() initializer {}\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "Initializable",
							"nameLocation": "1689:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "1709:73:0",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 6,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "1800:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 73,
									"src": "1787:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 5,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1787:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "1819:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 9,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "1928:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 73,
									"src": "1915:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1915:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "2069:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"id": 13,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "2358:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2393:13:0",
																"subExpression": {
																	"id": 16,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "2394:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2358:48:0",
															"trueExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 14,
																	"name": "_isConstructor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2374:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2374:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2408:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "2350:107:0"
											},
											{
												"assignments": [
													23
												],
												"declarations": [
													{
														"constant": false,
														"id": 23,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "2473:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 46,
														"src": "2468:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 22,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2468:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 26,
												"initialValue": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2490:14:0",
													"subExpression": {
														"id": 24,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "2491:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2468:36:0"
											},
											{
												"condition": {
													"id": 27,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "2518:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "2514:98:0",
												"trueBody": {
													"id": 36,
													"nodeType": "Block",
													"src": "2534:78:0",
													"statements": [
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 28,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "2548:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2564:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2548:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "2548:20:0"
														},
														{
															"expression": {
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 32,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "2582:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2597:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2582:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 35,
															"nodeType": "ExpressionStatement",
															"src": "2582:19:0"
														}
													]
												}
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2622:1:0"
											},
											{
												"condition": {
													"id": 39,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "2638:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 45,
												"nodeType": "IfStatement",
												"src": "2634:66:0",
												"trueBody": {
													"id": 44,
													"nodeType": "Block",
													"src": "2654:46:0",
													"statements": [
														{
															"expression": {
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 40,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "2668:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2684:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2668:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 43,
															"nodeType": "ExpressionStatement",
															"src": "2668:21:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "1948:93:0",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 47,
									"name": "initializer",
									"nameLocation": "2055:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:2:0"
									},
									"src": "2046:660:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "2923:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 51,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "2941:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2956:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2933:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "2933:69:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3012:1:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2712:178:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} modifier, directly or indirectly."
									},
									"id": 57,
									"name": "onlyInitializing",
									"nameLocation": "2904:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2920:2:0"
									},
									"src": "2895:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "3080:58:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3097:34:0",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 66,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3125:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Initializable_$73",
																			"typeString": "contract Initializable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Initializable_$73",
																			"typeString": "contract Initializable"
																		}
																	],
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3117:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 64,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3117:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3117:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 62,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "3098:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$446_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 169,
															"src": "3098:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3098:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 70,
												"nodeType": "Return",
												"src": "3090:41:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isConstructor",
									"nameLocation": "3035:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "3074:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:6:0"
									},
									"scope": 73,
									"src": "3026:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 74,
							"src": "1671:1469:0",
							"usedErrors": []
						}
					],
					"src": "113:3028:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							151
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 75,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 76,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 151,
							"linearizedBaseContracts": [
								151
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 151,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 151,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 97,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 151,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 151,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 151,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 151,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 141,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 150,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 152,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 162,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 446,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 180,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$446",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$446",
																				"typeString": "library Address"
																			}
																		],
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 178,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 183,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													189,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 188,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 196,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 190,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 198,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 446,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 214,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 213,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															220,
															240
														],
														"referencedDeclaration": 240,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 212,
												"id": 218,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 446,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 234,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 236,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 232,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															260,
															310
														],
														"referencedDeclaration": 310,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 231,
												"id": 238,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 446,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 252,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															260,
															310
														],
														"referencedDeclaration": 310,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 251,
												"id": 258,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 244,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 446,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 277,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$446",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$446",
																				"typeString": "library Address"
																			}
																		],
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 275,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 280,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 287,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 286,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													293,
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 302,
												"initialValue": {
													"arguments": [
														{
															"id": 300,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 296,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 298,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 305,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 306,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 303,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 273,
												"id": 308,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 446,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 321,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 320,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															327,
															362
														],
														"referencedDeclaration": 362,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 319,
												"id": 325,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 446,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 341,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 340,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													347,
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 346,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 348,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"id": 352,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 350,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 357,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 358,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 355,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 338,
												"id": 360,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 446,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 372,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															379,
															414
														],
														"referencedDeclaration": 414,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 371,
												"id": 377,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 446,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 393,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 392,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													399,
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 398,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 400,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"arguments": [
														{
															"id": 404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 402,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 409,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 410,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 407,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 390,
												"id": 412,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 446,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 426,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 417,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 430,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 440,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 437,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 421,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 436,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 439,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 441,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 435,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 419,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 419,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 434,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 427,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 425,
															"id": 428,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 446,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 447,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"contracts/defi.sol": {
				"ast": {
					"absolutePath": "contracts/defi.sol",
					"exportedSymbols": {
						"Address": [
							446
						],
						"Cheddar": [
							586
						],
						"IERC20": [
							151
						],
						"IUniswapV2Router01": [
							894
						],
						"IUniswapV2Router02": [
							982
						],
						"Initializable": [
							73
						]
					},
					"id": 587,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 152,
							"src": "64:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 74,
							"src": "121:63:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Router02.sol",
							"file": "./interfaces/IUniswapV2Router02.sol",
							"id": 451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 983,
							"src": "185:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 452,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "252:13:3"
									},
									"id": 453,
									"nodeType": "InheritanceSpecifier",
									"src": "252:13:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 586,
							"linearizedBaseContracts": [
								586,
								73
							],
							"name": "Cheddar",
							"nameLocation": "241:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 456,
									"mutability": "mutable",
									"name": "tokens",
									"nameLocation": "279:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "269:16:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 454,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "269:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 455,
										"nodeType": "ArrayTypeName",
										"src": "269:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 459,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "306:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "287:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 458,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 457,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 982,
											"src": "287:18:3"
										},
										"referencedDeclaration": 982,
										"src": "287:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 461,
									"mutability": "mutable",
									"name": "wrappedMatic",
									"nameLocation": "322:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "314:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 460,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "314:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "441:81:3",
										"statements": [
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "447:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 473,
														"name": "_tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "456:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "447:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "447:16:3"
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "469:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 477,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "478:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "469:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "469:16:3"
											},
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "wrappedMatic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "491:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 481,
														"name": "_wrappedMatic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "506:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "491:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "491:28:3"
											}
										]
									},
									"functionSelector": "90482d72",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "346:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "374:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "357:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 462,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "357:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 463,
													"nodeType": "ArrayTypeName",
													"src": "357:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "402:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "383:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
													"typeString": "contract IUniswapV2Router02"
												},
												"typeName": {
													"id": 466,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 465,
														"name": "IUniswapV2Router02",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 982,
														"src": "383:18:3"
													},
													"referencedDeclaration": 982,
													"src": "383:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "_wrappedMatic",
												"nameLocation": "419:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "411:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:77:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:0:3"
									},
									"scope": 586,
									"src": "337:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "603:790:3",
										"statements": [
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "615:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 584,
														"src": "610:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 494,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "610:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 498,
												"initialValue": {
													"expression": {
														"id": 496,
														"name": "_tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "629:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "629:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "610:33:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 500,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "657:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "657:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "667:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204d6174696321",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "669:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067",
																"typeString": "literal_string \"Invalid Matic!\""
															},
															"value": "Invalid Matic!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d21cc6f71313fc2072482d4af89ec569ab876080646b873d538ca7d8c7f8a067",
																"typeString": "literal_string \"Invalid Matic!\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "649:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "649:37:3"
											},
											{
												"body": {
													"id": 582,
													"nodeType": "Block",
													"src": "725:344:3",
													"statements": [
														{
															"assignments": [
																521
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 521,
																	"mutability": "mutable",
																	"name": "path",
																	"nameLocation": "753:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 582,
																	"src": "736:21:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 519,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "736:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 520,
																		"nodeType": "ArrayTypeName",
																		"src": "736:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "32",
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "774:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		}
																	],
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "760:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (address[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 522,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "764:7:3",
																			"stateMutability": "nonpayable",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 523,
																		"nodeType": "ArrayTypeName",
																		"src": "764:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "760:16:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "736:40:3"
														},
														{
															"expression": {
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 528,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "790:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 530,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "795:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "790:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 533,
																			"name": "wrappedMatic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 461,
																			"src": "808:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "800:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 531,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "800:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "800:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "790:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 536,
															"nodeType": "ExpressionStatement",
															"src": "790:31:3"
														},
														{
															"expression": {
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 537,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "835:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 539,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "840:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "835:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 542,
																				"name": "_tokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 488,
																				"src": "853:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 544,
																			"indexExpression": {
																				"id": 543,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "861:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "853:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "845:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 540,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "845:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "845:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "835:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 547,
															"nodeType": "ExpressionStatement",
															"src": "835:29:3"
														},
														{
															"assignments": [
																549
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 549,
																	"mutability": "mutable",
																	"name": "ethToSend",
																	"nameLocation": "883:9:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 582,
																	"src": "878:14:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 548,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "878:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 559,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 550,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "895:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "895:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"baseExpression": {
																					"id": 552,
																					"name": "bp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 491,
																					"src": "906:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 554,
																				"indexExpression": {
																					"id": 553,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "909:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "906:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 555,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "905:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "895:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "913:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "895:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "878:40:3"
														},
														{
															"expression": {
																"expression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 562,
																				"name": "router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 459,
																				"src": "940:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			],
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "932:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 560,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "932:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "932:15:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "932:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"names": [
																	"value"
																],
																"nodeType": "FunctionCallOptions",
																"options": [
																	{
																		"components": [
																			{
																				"id": 565,
																				"name": "ethToSend",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "961:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 566,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "960:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"src": "932:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 568,
															"nodeType": "ExpressionStatement",
															"src": "932:40:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 572,
																		"name": "ethToSend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "1015:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 573,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "1026:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	{
																		"expression": {
																			"id": 574,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1032:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1032:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 576,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1044:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "1044:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "33363030",
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1060:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3600_by_1",
																				"typeString": "int_const 3600"
																			},
																			"value": "3600"
																		},
																		"src": "1044:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 569,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "986:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$982",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "swapExactETHForTokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 789,
																	"src": "986:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "986:79:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 581,
															"nodeType": "ExpressionStatement",
															"src": "986:79:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "706:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 512,
														"name": "totalTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "708:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "706:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"initializationExpression": {
													"assignments": [
														508
													],
													"declarations": [
														{
															"constant": false,
															"id": 508,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "701:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 583,
															"src": "696:6:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 507,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "696:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 510,
													"initialValue": {
														"hexValue": "30",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "703:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "696:8:3"
												},
												"loopExpression": {
													"expression": {
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "721:3:3",
														"subExpression": {
															"id": 514,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "721:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 516,
													"nodeType": "ExpressionStatement",
													"src": "721:3:3"
												},
												"nodeType": "ForStatement",
												"src": "692:377:3"
											}
										]
									},
									"functionSelector": "9728d85f",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAndPay",
									"nameLocation": "533:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "561:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "544:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 486,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "544:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 487,
													"nodeType": "ArrayTypeName",
													"src": "544:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "bp",
												"nameLocation": "584:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "570:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 489,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "570:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 490,
													"nodeType": "ArrayTypeName",
													"src": "570:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:44:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:0:3"
									},
									"scope": 586,
									"src": "524:869:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 587,
							"src": "232:1164:3",
							"usedErrors": []
						}
					],
					"src": "39:1357:3"
				},
				"id": 3
			},
			"contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							894
						]
					},
					"id": 895,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 894,
							"linearizedBaseContracts": [
								894
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "67:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "101:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "108:2:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "134:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:9:4"
									},
									"scope": 894,
									"src": "92:51:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "157:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:2:4"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "187:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:9:4"
									},
									"scope": 894,
									"src": "148:48:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "211:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "265:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "257:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "286:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "281:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "281:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "315:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "310:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "310:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "344:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "339:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "339:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "369:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "364:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "364:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "397:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "389:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "414:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "409:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "409:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:205:4"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "452:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "447:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "447:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "466:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "461:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "480:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "475:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "446:44:4"
									},
									"scope": 894,
									"src": "202:289:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "505:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "538:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "530:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "558:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "553:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "553:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "591:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "586:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "620:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "615:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "615:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "650:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "642:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "667:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "662:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:161:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "713:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "708:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "708:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "731:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "726:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "726:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "747:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "742:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "742:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:50:4"
									},
									"scope": 894,
									"src": "496:262:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "772:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "805:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "797:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "829:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "821:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "850:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "845:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "874:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "869:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "899:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "894:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "894:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "927:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "919:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "944:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "939:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:171:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "982:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "977:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "977:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "996:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "991:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "991:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:28:4"
									},
									"scope": 894,
									"src": "763:242:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1019:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1055:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1047:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1075:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1070:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1070:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1099:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1094:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1094:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1128:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1123:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1123:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1158:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1150:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1175:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1170:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:152:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1213:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1208:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1231:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1226:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1226:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:34:4"
									},
									"scope": 894,
									"src": "1010:232:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1256:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1299:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1291:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1323:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1315:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1344:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1339:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1339:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1368:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1363:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1363:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1393:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1388:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1421:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1413:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1461:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1456:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1456:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1479:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1473:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 701,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1473:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1490:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1482:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 703,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1501:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1493:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:227:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1532:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1527:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1527:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1546:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1541:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1541:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:28:4"
									},
									"scope": 894,
									"src": "1247:308:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1569:28:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1615:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1607:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1635:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1630:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1630:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1659:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1654:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1654:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1688:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1683:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1683:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1718:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1710:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1735:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1730:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1730:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1758:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1753:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 726,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1753:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1770:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 728,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1770:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1798:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1790:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 732,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1597:208:4"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1829:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1824:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1824:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1847:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1842:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1842:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:34:4"
									},
									"scope": 894,
									"src": "1560:298:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1872:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1911:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1906:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1906:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1934:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1929:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1929:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1975:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1956:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 745,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1956:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 746,
													"nodeType": "ArrayTypeName",
													"src": "1956:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1997:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1989:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2014:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2009:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:132:4"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2061:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2047:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2047:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"nodeType": "ArrayTypeName",
													"src": "2047:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2046:23:4"
									},
									"scope": 894,
									"src": "1863:207:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2084:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2123:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2118:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2118:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2147:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2142:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2142:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2187:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2168:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 762,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2168:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 763,
													"nodeType": "ArrayTypeName",
													"src": "2168:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2209:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2201:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2226:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2221:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2221:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2108:132:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2273:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2259:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 770,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2259:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 771,
													"nodeType": "ArrayTypeName",
													"src": "2259:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:23:4"
									},
									"scope": 894,
									"src": "2075:207:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2296:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2323:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "2318:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2318:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2356:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "2337:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 777,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2337:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 778,
													"nodeType": "ArrayTypeName",
													"src": "2337:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2370:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "2362:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2379:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "2374:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2374:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:71:4"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2453:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "2439:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 785,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2439:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 786,
													"nodeType": "ArrayTypeName",
													"src": "2439:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:23:4"
									},
									"scope": 894,
									"src": "2287:175:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2476:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2503:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2498:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2498:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2519:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2514:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2514:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2551:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2532:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 794,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2532:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 795,
													"nodeType": "ArrayTypeName",
													"src": "2532:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2565:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2557:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2574:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2569:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2569:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:86:4"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2632:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2618:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 802,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2618:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 803,
													"nodeType": "ArrayTypeName",
													"src": "2618:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2617:23:4"
									},
									"scope": 894,
									"src": "2467:174:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2655:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2682:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2677:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2677:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2697:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2692:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2692:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2730:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2711:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 811,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2711:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 812,
													"nodeType": "ArrayTypeName",
													"src": "2711:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2744:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2736:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2753:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2748:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2748:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:86:4"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2811:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2797:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 819,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2797:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 820,
													"nodeType": "ArrayTypeName",
													"src": "2797:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2796:23:4"
									},
									"scope": 894,
									"src": "2646:174:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2834:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2861:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2856:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2856:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2891:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2872:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 826,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2872:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 827,
													"nodeType": "ArrayTypeName",
													"src": "2872:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2905:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2897:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2914:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2909:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2909:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2855:68:4"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2988:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2974:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 834,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2974:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 835,
													"nodeType": "ArrayTypeName",
													"src": "2974:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2973:23:4"
									},
									"scope": 894,
									"src": "2825:172:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3012:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3018:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3018:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3037:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3032:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3052:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3047:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3047:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3017:44:4"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3090:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3085:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3085:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3084:14:4"
									},
									"scope": 894,
									"src": "3003:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3113:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3131:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3126:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3146:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3141:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3141:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3162:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3157:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3157:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3125:48:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3202:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3197:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3197:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3196:16:4"
									},
									"scope": 894,
									"src": "3104:109:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3227:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3244:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3239:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3239:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3260:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3255:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3255:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3276:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3271:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3271:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3238:49:4"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3316:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3311:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3311:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:15:4"
									},
									"scope": 894,
									"src": "3218:108:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3340:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3359:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3354:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3354:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3388:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3369:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 874,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3369:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 875,
													"nodeType": "ArrayTypeName",
													"src": "3369:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:40:4"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3431:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3417:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 878,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3417:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 879,
													"nodeType": "ArrayTypeName",
													"src": "3417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3416:23:4"
									},
									"scope": 894,
									"src": "3331:109:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3454:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3472:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3467:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3467:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3502:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3483:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 885,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3483:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 886,
													"nodeType": "ArrayTypeName",
													"src": "3483:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:41:4"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3545:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3531:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 889,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3531:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 890,
													"nodeType": "ArrayTypeName",
													"src": "3531:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3530:23:4"
									},
									"scope": 894,
									"src": "3445:109:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 895,
							"src": "57:3499:4",
							"usedErrors": []
						}
					],
					"src": "32:3525:4"
				},
				"id": 4
			},
			"contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							894
						],
						"IUniswapV2Router02": [
							982
						]
					},
					"id": 983,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 896,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 983,
							"sourceUnit": 895,
							"src": "57:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 898,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 894,
										"src": "125:18:5"
									},
									"id": 899,
									"nodeType": "InheritanceSpecifier",
									"src": "125:18:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 982,
							"linearizedBaseContracts": [
								982,
								894
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "103:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "159:47:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "224:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "216:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "244:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "239:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "239:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "268:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "263:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "263:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "297:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "292:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "327:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "319:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "344:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "339:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "339:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:152:5"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "382:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "377:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:16:5"
									},
									"scope": 982,
									"src": "150:243:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "407:57:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "482:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "474:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "502:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "497:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "497:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "526:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "521:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "521:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "555:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "550:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "550:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "585:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "577:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "602:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "597:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "597:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "625:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "620:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "620:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "643:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "637:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 931,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "637:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "654:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "646:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 935,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:208:5"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "696:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "691:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "691:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:16:5"
									},
									"scope": 982,
									"src": "398:309:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "722:53:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "790:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "785:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "785:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "813:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "808:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "854:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "835:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 946,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "835:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 947,
													"nodeType": "ArrayTypeName",
													"src": "835:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "876:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "868:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "893:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "888:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "888:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:132:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:0:5"
									},
									"scope": 982,
									"src": "713:204:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "931:50:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "996:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "991:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "991:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1037:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1018:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 958,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1018:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 959,
													"nodeType": "ArrayTypeName",
													"src": "1018:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1059:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1051:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1076:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1071:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1071:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:109:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:0:5"
									},
									"scope": 982,
									"src": "922:186:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1122:50:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1187:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1182:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1182:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1210:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1205:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1205:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1251:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1232:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 972,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1232:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 973,
													"nodeType": "ArrayTypeName",
													"src": "1232:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1265:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1290:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1285:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1285:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:132:5"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1313:0:5"
									},
									"scope": 982,
									"src": "1113:201:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 983,
							"src": "93:1223:5",
							"usedErrors": []
						}
					],
					"src": "32:1285:5"
				},
				"id": 5
			}
		}
	}
}